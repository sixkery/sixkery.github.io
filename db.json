{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/click.js","path":"js/src/click.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1590104800948},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1590104800948},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1590104800948},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1590104800948},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1590104800948},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1590104800948},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1590104800948},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1590104800948},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1590104800948},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1590104800948},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1590104800948},{"_id":"themes/next/_config.yml","hash":"243ba3279e4dff83a7b6fc1cc054e4cf7c8619e0","modified":1594135039491},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1590104800948},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1590104800948},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1590104800948},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1590104800948},{"_id":"source/CNAME","hash":"0b0debdf4e21267db6a2f68a8111866e39adcb34","modified":1590304598303},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1590104800948},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1590104800948},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1590104800948},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1590104800948},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1590104800948},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1590104800948},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1590104800948},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1590104800948},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1590104800948},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1590104800948},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1590104800948},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1590104800948},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1590104800948},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1590104800948},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1590104800948},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1590104800948},{"_id":"themes/next/layout/_layout.swig","hash":"3703b2f2f6bf5c0e337a6e3d2aeffb85db873565","modified":1594135307280},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1590104800948},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1590104800948},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1590104800948},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1590104800948},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1590104800948},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1590104800948},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1590104800948},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1590104800948},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1590104800948},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1590104800968},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1590104800968},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1590104800968},{"_id":"source/_posts/2018-12-20-ten-miles.md","hash":"f5adc8c6457a1d9966270aa7fab5afbfb6c182b9","modified":1589932003612},{"_id":"source/_posts/2018-3-26-diary.md","hash":"3a0253e77f594b6254982f00683077075a7475ea","modified":1589932003612},{"_id":"source/_posts/2018-4-20-github-edit.md","hash":"6250c140a413b5c1054cdb8080b9ddf71709681e","modified":1589932003612},{"_id":"source/_posts/2018-5-19-see.md","hash":"d1c21feae74b97abf627ed9e821f4871b50c7e83","modified":1589932003612},{"_id":"source/_posts/2018-9-01-git.md","hash":"2f43d07977f4a65a429c3641c19f02a62ba2c08e","modified":1589932003612},{"_id":"source/_posts/2019-08-10-twoSum.md","hash":"d26b7c61f7d3110ca3d3cb5537be1c722df54274","modified":1589932003612},{"_id":"source/_posts/2019-09-26-ip.md","hash":"56a50a47f2bcd4dd3cf8983ae1f364b0ee7851c3","modified":1589932003612},{"_id":"source/_posts/2019-3-11 21-Markdown.md","hash":"c873901a6d27ffdaa0878ec2b7bcc8f962ced67b","modified":1589932003612},{"_id":"source/_posts/2019-3-11-tool.md","hash":"e9844107dd9723a6dd8844be401ea6748997701f","modified":1589932003612},{"_id":"source/_posts/2019-5-20-enum.md","hash":"ea98378baec6520dca5aeb3d53c9d339e2ddd73f","modified":1589932003612},{"_id":"source/_posts/2019-5-21-cache.md","hash":"d5fc65cad4292abd0ab8ccad73d6d98f9633f644","modified":1589932003612},{"_id":"source/_posts/2019-7-09-ElasticSearch.md","hash":"240b157c7e95a2527a8963271a5e948e74ee67fb","modified":1589932003612},{"_id":"source/_posts/2019-7-8-Linux.md","hash":"85be04c9d13235b71a19cc2e228b2186f00b3179","modified":1589932003612},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1590075268937},{"_id":"source/_posts/测试文章发布.md","hash":"a500e2bf9cdc31fbf9255edeb4c93b887f0516a8","modified":1590208834137},{"_id":"source/images/avatar.png","hash":"10d855ae90312d1bf4ffea427a5530b9b853922b","modified":1589932003612},{"_id":"source/about/index.md","hash":"680643f71af31af287178e16814cb53f08e63dbe","modified":1590304368918},{"_id":"source/tags/index.md","hash":"26338b44fc1be8a2938fbeacee6eefdc1aaeef60","modified":1590208762468},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800952},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1590104800948},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1590104800948},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1590104800948},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1590104800948},{"_id":"themes/next/layout/_macro/post.swig","hash":"5847124de52af38c73e32fa81fd022706c1f6287","modified":1594131870786},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1590104800948},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1590104800948},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1590104800948},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1590104800948},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c858aa5e78eb78db8cd50a91e342e16aedecf472","modified":1594166472111},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1590104800948},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1590104800948},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1590104800948},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1590104800948},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1590104800948},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1590104800948},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1590104800948},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1590104800948},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1590104800948},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1590104800948},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1590104800948},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1590104800948},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1590104800948},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1590104800948},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1590104800948},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1590104800948},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1590104800948},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1590104800948},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1590104800948},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1590104800948},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1590104800948},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1590104800948},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1590104800948},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1590104800948},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1590104800952},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1590104800952},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1590104800952},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1590104800952},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1590104800952},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1590104800952},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1590104800952},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1590104800952},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1590104800952},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1590104800952},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1590104800952},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1590104800952},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1590104800952},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1590104800952},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1590104800952},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1590104800952},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1590104800952},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1590104800952},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1590104800952},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800948},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800948},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800952},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800952},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800952},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800952},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590104800952},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1590104800948},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1590104800948},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1590104800948},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1590104800948},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1590104800948},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1590104800948},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1590104800948},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1590104800948},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1590104800948},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1590104800948},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1590104800948},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1590104800948},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1590104800948},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1590104800948},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1590104800948},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1590104800948},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1590104800948},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1590104800948},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"88efaf08be2c761ff14a71e30f03fb04d1641446","modified":1594134800877},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1590104800952},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1590104800952},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1590104800952},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1590104800952},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1590104800952},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1590104800952},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1590104800952},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1590104800952},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1590104800952},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1590104800952},{"_id":"themes/next/source/js/src/click.js","hash":"9a063bd1b36ce939e33d4d1352398d6490ea5eea","modified":1594135188060},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1590104800952},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1590104800952},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1590104800952},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1590104800952},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1590104800952},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1590104800952},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1590104800952},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1590104800952},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1590104800956},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1590104800956},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1590104800956},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1590104800956},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1590104800956},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1590104800956},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1590104800956},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1590104800964},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1590104800964},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1590104800964},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1590104800964},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1590104800964},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1590104800964},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1590104800964},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1590104800964},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1590104800964},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1590104800964},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1590104800964},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1590104800964},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1590104800964},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1590104800964},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1590104800968},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1590104800968},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1590104800968},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1590104800968},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1590104800968},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1590104800964},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1590104800948},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1590104800952},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1590104800952},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1590104800952},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1590104800952},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1590104800952},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1590104800952},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1590104800952},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1590104800952},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1590104800952},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1590104800952},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1590104800956},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1590104800956},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1590104800956},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1590104800956},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1590104800968},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1590104800968},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1590104800964},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1590104800964},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1590104800968},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1590104800948},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4ff2fb9842889298f5d6d96f4f83569e9276d662","modified":1594132051988},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"de8a561469cc02282631a619f6e92de2225600af","modified":1594133688600},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1590104800952},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1590104800952},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1590104800952},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1590104800952},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1590104800952},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1590104800952},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1590104800952},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1590104800952},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1590104800956},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1590104800956},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1590104800960},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1590104800960},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1590104800964},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1590104800956},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1590104800968},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1590104800960},{"_id":"public/archives/page/2/index.html","hash":"4de34a9d8520d41a6725d28ad680a4e361cf8e1d","modified":1594166485221},{"_id":"public/archives/2018/05/index.html","hash":"b3ffc2f6203bb22930af45d95a3f630a7cdfc373","modified":1594166485221},{"_id":"public/archives/2018/09/index.html","hash":"eb66e2d64193003e1866915e6fc66f361ca1570e","modified":1594166485221},{"_id":"public/archives/2018/10/index.html","hash":"22036932bfa972639b7e77d85d5dd645b6d9da8a","modified":1594166485221},{"_id":"public/archives/2018/11/index.html","hash":"ae384ec002ff37597f80c1bc5e3b631739fa259b","modified":1594166485221},{"_id":"public/archives/2018/12/index.html","hash":"f81afa546fda413c209f49ad98d4911648053ee1","modified":1594166485221},{"_id":"public/archives/2019/03/index.html","hash":"fda6bf61b893a2142c61fdd1f993294c8d9435a5","modified":1594166485221},{"_id":"public/archives/2019/05/index.html","hash":"0697e1733d5de9da5ab78b44b1a7ca6b129f040e","modified":1594166485221},{"_id":"public/archives/2019/07/index.html","hash":"10a95bfafe84bc8b6b61ddc7336652d66d344e82","modified":1594166485221},{"_id":"public/archives/2019/08/index.html","hash":"fd1030e3670cda87454dc24234411870d1d011d5","modified":1594166485221},{"_id":"public/archives/2019/09/index.html","hash":"3d9c3ea0e97b0a3bd17e9c21e28128ee8d9d88c5","modified":1594166485221},{"_id":"public/archives/2020/index.html","hash":"9f4c71c9b7e5b9b12ca05ceb8e3fb7aedb3fc998","modified":1594166485221},{"_id":"public/archives/2020/05/index.html","hash":"c0559fd5b316aff8e3c66e5ef1873136f4bc8699","modified":1594166485221},{"_id":"public/archives/2020/07/index.html","hash":"a38c05212e3a37e5eceabe5e9923f89dd1b41b85","modified":1594166485221},{"_id":"public/tags/Python/index.html","hash":"3c892a10ee3d1846421b15164278b01730ef7db4","modified":1594166485221},{"_id":"public/tags/生活/index.html","hash":"52c6ee37d2bf835fdb92b782d73d99ceb61aeeaa","modified":1594166485221},{"_id":"public/tags/SpringBoot/index.html","hash":"497bcdc4306f547fcbc4135ee56bfb1030ff89f9","modified":1594166485221},{"_id":"public/tags/LeetCode/index.html","hash":"c20b9d3f71da51adc96119da9ab784ca8e48793a","modified":1594166485221},{"_id":"public/tags/Git/index.html","hash":"aa700f28a2db7828534bb43ee2e2fcfe9109c91c","modified":1594166485221},{"_id":"public/tags/Java/index.html","hash":"6bc5c33e4ea8e521b8f73841246a61e69d24e0ab","modified":1594166485221},{"_id":"public/tags/缓存/index.html","hash":"360abfad83f3802edc863105d513e4748d45194f","modified":1594166485221},{"_id":"public/tags/Linux/index.html","hash":"b682d3f25609e1372be6bfbcb1656c3a138403ce","modified":1594166485221},{"_id":"public/tags/测试/index.html","hash":"7d4e9140a5760801f2880d97669cd6835afc8bfd","modified":1594166485221},{"_id":"public/2020/07/07/hello-world/index.html","hash":"348fcbeedb1ebf9878bcf2de461dd7f184f9e360","modified":1594166485221},{"_id":"public/2020/05/22/测试文章发布/index.html","hash":"718159966d07b3e24af1d88baf2028329d1a3b93","modified":1594166485221},{"_id":"public/2019/09/26/2019-09-26-ip/index.html","hash":"360b27bf18f2414460c2a937cf6daf40a25dbde9","modified":1594166485221},{"_id":"public/2019/08/10/2019-08-10-twoSum/index.html","hash":"c178901c941dee105adc5853a18216ed27253cf8","modified":1594166485221},{"_id":"public/2019/07/09/2019-7-09-ElasticSearch/index.html","hash":"3c8fa90391d2d5c92964d69a995e2ab5c9aa941b","modified":1594166485221},{"_id":"public/2019/05/21/2019-5-21-cache/index.html","hash":"d33029f90a4229e5c12dce28cdd1d5ff5fbe9883","modified":1594166485221},{"_id":"public/2019/05/20/2019-5-20-enum/index.html","hash":"c613f217a295f8fbcde7e548ddfc429e59ea6a75","modified":1594166485221},{"_id":"public/2019/03/11/2019-3-11-tool/index.html","hash":"0aa6e1cc2f3fec523e67547e715a6e518e6ac862","modified":1594166485221},{"_id":"public/2019/03/11/2019-3-11 21-Markdown/index.html","hash":"8d99cf0d7320e85992b74d17aa11457fd8f0dadd","modified":1594166485221},{"_id":"public/2018/12/20/2018-12-20-ten-miles/index.html","hash":"6df0f7a62e99f9eea9eb80b1c520e6bf0664c45a","modified":1594166485221},{"_id":"public/2018/11/01/2019-7-8-Linux/index.html","hash":"7f59d5691bd3f9b01883188790baefb32d1da9d2","modified":1594166485221},{"_id":"public/2018/11/01/2018-4-20-github-edit/index.html","hash":"4ef2849ce0080a2783e3ba2a97ec1a45d01faac2","modified":1594166485221},{"_id":"public/2018/10/15/2018-3-26-diary/index.html","hash":"10311b4dab405b97777825c17302d717cc11b44e","modified":1594166485221},{"_id":"public/2018/09/01/2018-9-01-git/index.html","hash":"ea787eac6ca6106b48b94a50c726faf99d54b0f4","modified":1594166485221},{"_id":"public/2018/05/19/2018-5-19-see/index.html","hash":"02b300318a006b7a70cfb1ff68a3a6e0d8010d26","modified":1594166485221},{"_id":"public/archives/index.html","hash":"04d1332ee45c62fed2eafcf05cd05ef1cfdcc70e","modified":1594166485221},{"_id":"public/archives/2018/index.html","hash":"6b8d88bdf49c392b97a3dbdf2b3631931b776ad0","modified":1594166485221},{"_id":"public/archives/2019/index.html","hash":"949dd1785293740e1bb852c10741a60c6443149d","modified":1594166485221},{"_id":"public/index.html","hash":"2aa49634805731fe585c639cc0d4576aa031b745","modified":1594166485221},{"_id":"public/page/2/index.html","hash":"dc1e05e55254641796709c087fceb8dc09320403","modified":1594166485221},{"_id":"public/CNAME","hash":"0b0debdf4e21267db6a2f68a8111866e39adcb34","modified":1594166485221},{"_id":"public/images/avatar.png","hash":"10d855ae90312d1bf4ffea427a5530b9b853922b","modified":1594166485221},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1594166485221},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1594166485221},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1594166485221},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1594166485221},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1594166485221},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1594166485221},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1594166485221},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1594166485221},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1594166485221},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1594166485221},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1594166485221},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1594166485221},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1594166485221},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1594166485221},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1594166485221},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1594166485221},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1594166485221},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1594166485221},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1594166485221},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1594166485221},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1594166485221},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1594166485221},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1594166485221},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1594166485221},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1594166485221},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1594166485221},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1594166485221},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1594166485221},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1594166485221},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1594166485221},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1594166485221},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1594166485221},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1594166485221},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1594166485221},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1594166485221},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1594166485221},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1594166485221},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1594166485221},{"_id":"public/js/src/click.js","hash":"9a063bd1b36ce939e33d4d1352398d6490ea5eea","modified":1594166485221},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1594166485221},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1594166485221},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1594166485221},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1594166485221},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1594166485221},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1594166485221},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1594166485221},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1594166485221},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1594166485221},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1594166485221},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1594166485221},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1594166485221},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1594166485221},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1594166485221},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1594166485221},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1594166485221},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1594166485221},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1594166485221},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1594166485221},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1594166485221},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1594166485221},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1594166485221},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1594166485221},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1594166485221},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1594166485221},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1594166485221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1594166485221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1594166485221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1594166485221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1594166485221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1594166485221},{"_id":"public/lib/fastclick/README.html","hash":"b9e008af0866799103e596e2eda466a33d7dde18","modified":1594166485221},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"7eecc5e472416b9870580c53b7ed0c44474ed23a","modified":1594166485221},{"_id":"public/lib/jquery_lazyload/README.html","hash":"9c91bba4263a20004f2c10772d438cfa8312c308","modified":1594166485221},{"_id":"public/css/main.css","hash":"f519d2c2de92c7230a863e5246a5d19ccdeb1774","modified":1594166485221},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1594166485221},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1594166485221},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1594166485221},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1594166485221},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1594166485221},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1594166485221},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1594166485221},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1594166485221},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1594166485221},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1594166485221},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1594166485221},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1594166485221},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1594166485221},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1594166485221},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1594166485221},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1594166485221},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1594166485221},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1594166485221},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1594166485221},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1594166485221},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1594166485221},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1594166485221},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1594166485221},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1594166485221}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"post","title":"Python爬取《春风十里不如你》分析","date":"2018-12-20T13:15:06.000Z","description":"念念不忘","_content":"\n>人的一生要经历太多的生离死别，那些突如其来的离别往往将人伤得措手不及。\n人生何处不相逢，但有些转身，真的就是一生，从此后会无期，永不相见。\n用力爱过的人，讲再见那一刻格外艰难。\n世界上最遥远的距离不是生离死别，而是对方已经云淡风轻，你却念念不忘。\n>——网友评论\n\n一直很喜欢这首歌。正好学习python ，想着把这首歌的热门评论爬下来，看看网友的故事。\n\n网易云音乐是一个有情怀的地方。大多数想说却没有办法说出口的话都能留在评论里。\n\n费话不说了，开工。\n\n## 获取数据\n打开网易云音乐，找到歌曲春分十里不如你，打开开发者工具，分析页面。\n![页面内容](https://upload-images.jianshu.io/upload_images/13161325-a070dfc506dd8c88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n通过 搜索框 url 的 id 可以定位到评论的 url 。看到请求是 post 方法的，我们可以看到下边的两个参数。\n```python\nparams: 12PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/72oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY\nencSecKey: 227faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678\n```\n至于这两个参数怎么破解，小弟确实不会，不过有知乎大神已经破解过了，想要了解的可以移步知乎获取方法。\n\n我们就直接拿到这两个参数去请求就好了。\n```python\n# 获取评论数据\ndef get_data():\n    url = 'https://music.163.com/weapi/v1/resource/comments/R_SO_4_38576323?csrf_token='\n    headers = {'Host': 'music.163.com',\n               'Origin': 'https://music.163.com',\n               'Referer': 'https://music.163.com/song?id=38576323',\n               'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'\n               }\n    data = {'params': '12PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/72oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY',\n            'encSecKey': '227faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678'}\n    response = requests.post(url,headers=headers,data=data)\n```\n请求完发现数据是 json 格式的，那么获取就没有什么难度了。\n```python\n    html = json.loads(response.text)\n    result = []\n    for item in html['hotComments']:\n        content = {'user':item['user']['nickname'],\n                  'likedCount':item['likedCount'],\n                   'content':item['content']\n                   }\n        result.append(content)\n    return result\n\n```\n## 可视化操作\n获取数据之后，我们把数据做的直观一点，便于查看。\n\n![直方图](https://upload-images.jianshu.io/upload_images/13161325-9290f8ec918e1c45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n看一下点赞首位的评论：\n\n听完这首歌，立刻定了下午五点的机票去北京找你。所以这次我用尽全力想对你说，你可不可以答应我，在我考上研究生到北京找你之前，你先不要结婚。不管我多么不喜欢北京，可是北京有你。没有你的杭州再美，也比不上有你的北京。\n\n因为一个人爱上一座城。没有你的城市再好的风景也淡然无味。\n\n![词云图](https://upload-images.jianshu.io/upload_images/13161325-412e5e466e8cb70d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n## 结语\n\n总有一天，会有一个人，看你写过的所有状态，读完写的所有微博，看你从小到大的所有照片，甚至去别的地方寻找关于你的信息，试着听你听的歌，走你走过的地方，看你喜欢看的书，品尝你总是大呼好吃的东西……只是想弥补上，他迟到的时光。\n\n代码上传到 [github](https://github.com/sixkery/python-) 点击可查看。","source":"_posts/2018-12-20-ten-miles.md","raw":"---\nlayout: post\ntitle: \"Python爬取《春风十里不如你》分析\"\ndate: 2018-12-20 21:15:06 \ndescription: \"念念不忘\"\ntag: Python\n---\n\n>人的一生要经历太多的生离死别，那些突如其来的离别往往将人伤得措手不及。\n人生何处不相逢，但有些转身，真的就是一生，从此后会无期，永不相见。\n用力爱过的人，讲再见那一刻格外艰难。\n世界上最遥远的距离不是生离死别，而是对方已经云淡风轻，你却念念不忘。\n>——网友评论\n\n一直很喜欢这首歌。正好学习python ，想着把这首歌的热门评论爬下来，看看网友的故事。\n\n网易云音乐是一个有情怀的地方。大多数想说却没有办法说出口的话都能留在评论里。\n\n费话不说了，开工。\n\n## 获取数据\n打开网易云音乐，找到歌曲春分十里不如你，打开开发者工具，分析页面。\n![页面内容](https://upload-images.jianshu.io/upload_images/13161325-a070dfc506dd8c88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n通过 搜索框 url 的 id 可以定位到评论的 url 。看到请求是 post 方法的，我们可以看到下边的两个参数。\n```python\nparams: 12PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/72oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY\nencSecKey: 227faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678\n```\n至于这两个参数怎么破解，小弟确实不会，不过有知乎大神已经破解过了，想要了解的可以移步知乎获取方法。\n\n我们就直接拿到这两个参数去请求就好了。\n```python\n# 获取评论数据\ndef get_data():\n    url = 'https://music.163.com/weapi/v1/resource/comments/R_SO_4_38576323?csrf_token='\n    headers = {'Host': 'music.163.com',\n               'Origin': 'https://music.163.com',\n               'Referer': 'https://music.163.com/song?id=38576323',\n               'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'\n               }\n    data = {'params': '12PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/72oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY',\n            'encSecKey': '227faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678'}\n    response = requests.post(url,headers=headers,data=data)\n```\n请求完发现数据是 json 格式的，那么获取就没有什么难度了。\n```python\n    html = json.loads(response.text)\n    result = []\n    for item in html['hotComments']:\n        content = {'user':item['user']['nickname'],\n                  'likedCount':item['likedCount'],\n                   'content':item['content']\n                   }\n        result.append(content)\n    return result\n\n```\n## 可视化操作\n获取数据之后，我们把数据做的直观一点，便于查看。\n\n![直方图](https://upload-images.jianshu.io/upload_images/13161325-9290f8ec918e1c45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n看一下点赞首位的评论：\n\n听完这首歌，立刻定了下午五点的机票去北京找你。所以这次我用尽全力想对你说，你可不可以答应我，在我考上研究生到北京找你之前，你先不要结婚。不管我多么不喜欢北京，可是北京有你。没有你的杭州再美，也比不上有你的北京。\n\n因为一个人爱上一座城。没有你的城市再好的风景也淡然无味。\n\n![词云图](https://upload-images.jianshu.io/upload_images/13161325-412e5e466e8cb70d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n## 结语\n\n总有一天，会有一个人，看你写过的所有状态，读完写的所有微博，看你从小到大的所有照片，甚至去别的地方寻找关于你的信息，试着听你听的歌，走你走过的地方，看你喜欢看的书，品尝你总是大呼好吃的东西……只是想弥补上，他迟到的时光。\n\n代码上传到 [github](https://github.com/sixkery/python-) 点击可查看。","slug":"2018-12-20-ten-miles","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkczj0000yfmy01m45yya","content":"<blockquote>\n<p>人的一生要经历太多的生离死别，那些突如其来的离别往往将人伤得措手不及。<br>人生何处不相逢，但有些转身，真的就是一生，从此后会无期，永不相见。<br>用力爱过的人，讲再见那一刻格外艰难。<br>世界上最遥远的距离不是生离死别，而是对方已经云淡风轻，你却念念不忘。<br>——网友评论</p>\n</blockquote>\n<p>一直很喜欢这首歌。正好学习python ，想着把这首歌的热门评论爬下来，看看网友的故事。</p>\n<p>网易云音乐是一个有情怀的地方。大多数想说却没有办法说出口的话都能留在评论里。</p>\n<p>费话不说了，开工。</p>\n<h2 id=\"获取数据\"><a href=\"#获取数据\" class=\"headerlink\" title=\"获取数据\"></a>获取数据</h2><p>打开网易云音乐，找到歌曲春分十里不如你，打开开发者工具，分析页面。<br><img src=\"https://upload-images.jianshu.io/upload_images/13161325-a070dfc506dd8c88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"页面内容\"><br>通过 搜索框 url 的 id 可以定位到评论的 url 。看到请求是 post 方法的，我们可以看到下边的两个参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params: <span class=\"number\">12</span>PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/<span class=\"number\">72</span>oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY</span><br><span class=\"line\">encSecKey: <span class=\"number\">227</span>faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678</span><br></pre></td></tr></table></figure>\n<p>至于这两个参数怎么破解，小弟确实不会，不过有知乎大神已经破解过了，想要了解的可以移步知乎获取方法。</p>\n<p>我们就直接拿到这两个参数去请求就好了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取评论数据</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    url = <span class=\"string\">'https://music.163.com/weapi/v1/resource/comments/R_SO_4_38576323?csrf_token='</span></span><br><span class=\"line\">    headers = &#123;<span class=\"string\">'Host'</span>: <span class=\"string\">'music.163.com'</span>,</span><br><span class=\"line\">               <span class=\"string\">'Origin'</span>: <span class=\"string\">'https://music.163.com'</span>,</span><br><span class=\"line\">               <span class=\"string\">'Referer'</span>: <span class=\"string\">'https://music.163.com/song?id=38576323'</span>,</span><br><span class=\"line\">               <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">    data = &#123;<span class=\"string\">'params'</span>: <span class=\"string\">'12PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/72oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY'</span>,</span><br><span class=\"line\">            <span class=\"string\">'encSecKey'</span>: <span class=\"string\">'227faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678'</span>&#125;</span><br><span class=\"line\">    response = requests.post(url,headers=headers,data=data)</span><br></pre></td></tr></table></figure>\n<p>请求完发现数据是 json 格式的，那么获取就没有什么难度了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html = json.loads(response.text)</span><br><span class=\"line\">result = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> html[<span class=\"string\">'hotComments'</span>]:</span><br><span class=\"line\">    content = &#123;<span class=\"string\">'user'</span>:item[<span class=\"string\">'user'</span>][<span class=\"string\">'nickname'</span>],</span><br><span class=\"line\">              <span class=\"string\">'likedCount'</span>:item[<span class=\"string\">'likedCount'</span>],</span><br><span class=\"line\">               <span class=\"string\">'content'</span>:item[<span class=\"string\">'content'</span>]</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">    result.append(content)</span><br><span class=\"line\"><span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h2 id=\"可视化操作\"><a href=\"#可视化操作\" class=\"headerlink\" title=\"可视化操作\"></a>可视化操作</h2><p>获取数据之后，我们把数据做的直观一点，便于查看。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13161325-9290f8ec918e1c45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"直方图\"><br>看一下点赞首位的评论：</p>\n<p>听完这首歌，立刻定了下午五点的机票去北京找你。所以这次我用尽全力想对你说，你可不可以答应我，在我考上研究生到北京找你之前，你先不要结婚。不管我多么不喜欢北京，可是北京有你。没有你的杭州再美，也比不上有你的北京。</p>\n<p>因为一个人爱上一座城。没有你的城市再好的风景也淡然无味。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13161325-412e5e466e8cb70d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"词云图\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>总有一天，会有一个人，看你写过的所有状态，读完写的所有微博，看你从小到大的所有照片，甚至去别的地方寻找关于你的信息，试着听你听的歌，走你走过的地方，看你喜欢看的书，品尝你总是大呼好吃的东西……只是想弥补上，他迟到的时光。</p>\n<p>代码上传到 <a href=\"https://github.com/sixkery/python-\" target=\"_blank\" rel=\"noopener\">github</a> 点击可查看。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>人的一生要经历太多的生离死别，那些突如其来的离别往往将人伤得措手不及。<br>人生何处不相逢，但有些转身，真的就是一生，从此后会无期，永不相见。<br>用力爱过的人，讲再见那一刻格外艰难。<br>世界上最遥远的距离不是生离死别，而是对方已经云淡风轻，你却念念不忘。<br>——网友评论</p>\n</blockquote>\n<p>一直很喜欢这首歌。正好学习python ，想着把这首歌的热门评论爬下来，看看网友的故事。</p>\n<p>网易云音乐是一个有情怀的地方。大多数想说却没有办法说出口的话都能留在评论里。</p>\n<p>费话不说了，开工。</p>\n<h2 id=\"获取数据\"><a href=\"#获取数据\" class=\"headerlink\" title=\"获取数据\"></a>获取数据</h2><p>打开网易云音乐，找到歌曲春分十里不如你，打开开发者工具，分析页面。<br><img src=\"https://upload-images.jianshu.io/upload_images/13161325-a070dfc506dd8c88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"页面内容\"><br>通过 搜索框 url 的 id 可以定位到评论的 url 。看到请求是 post 方法的，我们可以看到下边的两个参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params: <span class=\"number\">12</span>PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/<span class=\"number\">72</span>oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY</span><br><span class=\"line\">encSecKey: <span class=\"number\">227</span>faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678</span><br></pre></td></tr></table></figure>\n<p>至于这两个参数怎么破解，小弟确实不会，不过有知乎大神已经破解过了，想要了解的可以移步知乎获取方法。</p>\n<p>我们就直接拿到这两个参数去请求就好了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取评论数据</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    url = <span class=\"string\">'https://music.163.com/weapi/v1/resource/comments/R_SO_4_38576323?csrf_token='</span></span><br><span class=\"line\">    headers = &#123;<span class=\"string\">'Host'</span>: <span class=\"string\">'music.163.com'</span>,</span><br><span class=\"line\">               <span class=\"string\">'Origin'</span>: <span class=\"string\">'https://music.163.com'</span>,</span><br><span class=\"line\">               <span class=\"string\">'Referer'</span>: <span class=\"string\">'https://music.163.com/song?id=38576323'</span>,</span><br><span class=\"line\">               <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">    data = &#123;<span class=\"string\">'params'</span>: <span class=\"string\">'12PSl54ZzScPr+B27R+RJ14gF4YwwNz8YqWdldaCKao1s1/JexmIcnpaQu7oAkXM96vPBpEo42vFSp3BydeeYs6TKv/72oKRITbhg8hUP2vwsNW+hq8VfDvmjcq+ceScl9wEb3Wh6Whnu85Th7jHK4lNNKxNSJakjxuVnNcCDteI76F2xviD4jDcz9upF8CY'</span>,</span><br><span class=\"line\">            <span class=\"string\">'encSecKey'</span>: <span class=\"string\">'227faa18d4ac5f4dfa07b4f0664bcb181240fcfb74192d7ce86b19ce302c61c8a5f2cbf45fc8874b5d74f0f6320f7681eef36e3f3a4d8349eed908188aae9717dd64f4d678e1d15afb8f06b559ebd51b2bca7b225f274378d89c068e18f7f8d45f7019e6923c2a0da30a4b68ecdfe2d6dcb954c3cfb0ec8812da693944617678'</span>&#125;</span><br><span class=\"line\">    response = requests.post(url,headers=headers,data=data)</span><br></pre></td></tr></table></figure>\n<p>请求完发现数据是 json 格式的，那么获取就没有什么难度了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html = json.loads(response.text)</span><br><span class=\"line\">result = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> html[<span class=\"string\">'hotComments'</span>]:</span><br><span class=\"line\">    content = &#123;<span class=\"string\">'user'</span>:item[<span class=\"string\">'user'</span>][<span class=\"string\">'nickname'</span>],</span><br><span class=\"line\">              <span class=\"string\">'likedCount'</span>:item[<span class=\"string\">'likedCount'</span>],</span><br><span class=\"line\">               <span class=\"string\">'content'</span>:item[<span class=\"string\">'content'</span>]</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">    result.append(content)</span><br><span class=\"line\"><span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h2 id=\"可视化操作\"><a href=\"#可视化操作\" class=\"headerlink\" title=\"可视化操作\"></a>可视化操作</h2><p>获取数据之后，我们把数据做的直观一点，便于查看。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13161325-9290f8ec918e1c45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"直方图\"><br>看一下点赞首位的评论：</p>\n<p>听完这首歌，立刻定了下午五点的机票去北京找你。所以这次我用尽全力想对你说，你可不可以答应我，在我考上研究生到北京找你之前，你先不要结婚。不管我多么不喜欢北京，可是北京有你。没有你的杭州再美，也比不上有你的北京。</p>\n<p>因为一个人爱上一座城。没有你的城市再好的风景也淡然无味。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13161325-412e5e466e8cb70d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"词云图\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>总有一天，会有一个人，看你写过的所有状态，读完写的所有微博，看你从小到大的所有照片，甚至去别的地方寻找关于你的信息，试着听你听的歌，走你走过的地方，看你喜欢看的书，品尝你总是大呼好吃的东西……只是想弥补上，他迟到的时光。</p>\n<p>代码上传到 <a href=\"https://github.com/sixkery/python-\" target=\"_blank\" rel=\"noopener\">github</a> 点击可查看。</p>\n"},{"layout":"post","title":"明朝那些事儿","date":"2018-10-15T13:15:06.000Z","description":"观感","_content":"\n\n\n今天中午看完了《明朝那些事儿》，历时几天也没有算过。网易蜗牛读书知道。这些不重要，看完想说的点什么，就当随便感悟一下吧。\n\n先看一下网友的评论吧。\n\n![网友评论](https://upload-images.jianshu.io/upload_images/13161325-095c26efac6db240.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这本书，作者写的确实幽默，要不然这么多的内容，我觉得我是没有耐心看完的。感谢作者一下。\n\n前几天同学无聊聊到明朝那几个皇帝了，说各个都是奇葩。奇葩也还行吧。但我觉得，挺悲哀的。那些奇葩大多是自己不想当皇帝，没办法，轮到你，不当也不行，那就当吧。结果呢，明熹宗朱由校，也就是天启皇帝。喜欢木匠，大字不识一个，明知道奸臣当道，就是不作为，你别妨碍我玩木匠就完事。\n\n\n这是我在这个软件上看完的第二本书，刚上大学的时候，决定在大学里一定要多看书。于是，没事的时候就跑去图书馆，（好像就没有什么所谓的有事吧）现在已经不记得当时看过什么。没过多久，游戏已经占据了我的时间~~\n\n这本书写的幽默，并不代表历史就是幽默的，很多历史人物是极其复杂的，比如说戚继光，抗倭的同时也在搞腐败，搞点小动作，为啥，因为光靠给的物资不足以支撑军队的开销，不搞点小动作怎么抗倭。伟大的英雄怎么怎么牛逼，但他们同样有缺点的，我们要客观的看待，同时也要理解自身存在的缺点。尽量改造就好。\n\n对于历史，我只停留在从小学到中学课本上学到的那些东西，现在再想估计已经还给老师了。从本能上我是很抗拒的，我想绝大部分原因是上学的时候，每次历史课不是背哪个朝代什么时候灭亡，就是背哪个朝代改革对经济，文化的影响。现在想想头都是大的。\n\n这不是一种好的学习方式，所以我决定，将来我的孩子只要爱看书，历史考零蛋我都不管。\n\n书的最后写的很好，按照自己喜欢的方式度过这一生，我很喜欢。\n\n知乎上有这样一个帖子：「读书有什么用？」\n有一个回答是这样的：你从小到大吃过的饭，当时看起来没有用，只能满足你的胃口，但确实融入了你的身体。现在你看书，看过就忘，并没有什么价值，等你不自觉的用的时，就不会再问这个问题了。","source":"_posts/2018-3-26-diary.md","raw":"---\nlayout: post\ntitle: \"明朝那些事儿\"\ndate: 2018-10-15 21:15:06 \ndescription: \"观感\"\ntag: 生活\n---\n\n\n\n今天中午看完了《明朝那些事儿》，历时几天也没有算过。网易蜗牛读书知道。这些不重要，看完想说的点什么，就当随便感悟一下吧。\n\n先看一下网友的评论吧。\n\n![网友评论](https://upload-images.jianshu.io/upload_images/13161325-095c26efac6db240.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这本书，作者写的确实幽默，要不然这么多的内容，我觉得我是没有耐心看完的。感谢作者一下。\n\n前几天同学无聊聊到明朝那几个皇帝了，说各个都是奇葩。奇葩也还行吧。但我觉得，挺悲哀的。那些奇葩大多是自己不想当皇帝，没办法，轮到你，不当也不行，那就当吧。结果呢，明熹宗朱由校，也就是天启皇帝。喜欢木匠，大字不识一个，明知道奸臣当道，就是不作为，你别妨碍我玩木匠就完事。\n\n\n这是我在这个软件上看完的第二本书，刚上大学的时候，决定在大学里一定要多看书。于是，没事的时候就跑去图书馆，（好像就没有什么所谓的有事吧）现在已经不记得当时看过什么。没过多久，游戏已经占据了我的时间~~\n\n这本书写的幽默，并不代表历史就是幽默的，很多历史人物是极其复杂的，比如说戚继光，抗倭的同时也在搞腐败，搞点小动作，为啥，因为光靠给的物资不足以支撑军队的开销，不搞点小动作怎么抗倭。伟大的英雄怎么怎么牛逼，但他们同样有缺点的，我们要客观的看待，同时也要理解自身存在的缺点。尽量改造就好。\n\n对于历史，我只停留在从小学到中学课本上学到的那些东西，现在再想估计已经还给老师了。从本能上我是很抗拒的，我想绝大部分原因是上学的时候，每次历史课不是背哪个朝代什么时候灭亡，就是背哪个朝代改革对经济，文化的影响。现在想想头都是大的。\n\n这不是一种好的学习方式，所以我决定，将来我的孩子只要爱看书，历史考零蛋我都不管。\n\n书的最后写的很好，按照自己喜欢的方式度过这一生，我很喜欢。\n\n知乎上有这样一个帖子：「读书有什么用？」\n有一个回答是这样的：你从小到大吃过的饭，当时看起来没有用，只能满足你的胃口，但确实融入了你的身体。现在你看书，看过就忘，并没有什么价值，等你不自觉的用的时，就不会再问这个问题了。","slug":"2018-3-26-diary","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkczr0001yfmy21e4c3zc","content":"<p>今天中午看完了《明朝那些事儿》，历时几天也没有算过。网易蜗牛读书知道。这些不重要，看完想说的点什么，就当随便感悟一下吧。</p>\n<p>先看一下网友的评论吧。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13161325-095c26efac6db240.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"网友评论\"></p>\n<p>这本书，作者写的确实幽默，要不然这么多的内容，我觉得我是没有耐心看完的。感谢作者一下。</p>\n<p>前几天同学无聊聊到明朝那几个皇帝了，说各个都是奇葩。奇葩也还行吧。但我觉得，挺悲哀的。那些奇葩大多是自己不想当皇帝，没办法，轮到你，不当也不行，那就当吧。结果呢，明熹宗朱由校，也就是天启皇帝。喜欢木匠，大字不识一个，明知道奸臣当道，就是不作为，你别妨碍我玩木匠就完事。</p>\n<p>这是我在这个软件上看完的第二本书，刚上大学的时候，决定在大学里一定要多看书。于是，没事的时候就跑去图书馆，（好像就没有什么所谓的有事吧）现在已经不记得当时看过什么。没过多久，游戏已经占据了我的时间~~</p>\n<p>这本书写的幽默，并不代表历史就是幽默的，很多历史人物是极其复杂的，比如说戚继光，抗倭的同时也在搞腐败，搞点小动作，为啥，因为光靠给的物资不足以支撑军队的开销，不搞点小动作怎么抗倭。伟大的英雄怎么怎么牛逼，但他们同样有缺点的，我们要客观的看待，同时也要理解自身存在的缺点。尽量改造就好。</p>\n<p>对于历史，我只停留在从小学到中学课本上学到的那些东西，现在再想估计已经还给老师了。从本能上我是很抗拒的，我想绝大部分原因是上学的时候，每次历史课不是背哪个朝代什么时候灭亡，就是背哪个朝代改革对经济，文化的影响。现在想想头都是大的。</p>\n<p>这不是一种好的学习方式，所以我决定，将来我的孩子只要爱看书，历史考零蛋我都不管。</p>\n<p>书的最后写的很好，按照自己喜欢的方式度过这一生，我很喜欢。</p>\n<p>知乎上有这样一个帖子：「读书有什么用？」<br>有一个回答是这样的：你从小到大吃过的饭，当时看起来没有用，只能满足你的胃口，但确实融入了你的身体。现在你看书，看过就忘，并没有什么价值，等你不自觉的用的时，就不会再问这个问题了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天中午看完了《明朝那些事儿》，历时几天也没有算过。网易蜗牛读书知道。这些不重要，看完想说的点什么，就当随便感悟一下吧。</p>\n<p>先看一下网友的评论吧。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13161325-095c26efac6db240.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"网友评论\"></p>\n<p>这本书，作者写的确实幽默，要不然这么多的内容，我觉得我是没有耐心看完的。感谢作者一下。</p>\n<p>前几天同学无聊聊到明朝那几个皇帝了，说各个都是奇葩。奇葩也还行吧。但我觉得，挺悲哀的。那些奇葩大多是自己不想当皇帝，没办法，轮到你，不当也不行，那就当吧。结果呢，明熹宗朱由校，也就是天启皇帝。喜欢木匠，大字不识一个，明知道奸臣当道，就是不作为，你别妨碍我玩木匠就完事。</p>\n<p>这是我在这个软件上看完的第二本书，刚上大学的时候，决定在大学里一定要多看书。于是，没事的时候就跑去图书馆，（好像就没有什么所谓的有事吧）现在已经不记得当时看过什么。没过多久，游戏已经占据了我的时间~~</p>\n<p>这本书写的幽默，并不代表历史就是幽默的，很多历史人物是极其复杂的，比如说戚继光，抗倭的同时也在搞腐败，搞点小动作，为啥，因为光靠给的物资不足以支撑军队的开销，不搞点小动作怎么抗倭。伟大的英雄怎么怎么牛逼，但他们同样有缺点的，我们要客观的看待，同时也要理解自身存在的缺点。尽量改造就好。</p>\n<p>对于历史，我只停留在从小学到中学课本上学到的那些东西，现在再想估计已经还给老师了。从本能上我是很抗拒的，我想绝大部分原因是上学的时候，每次历史课不是背哪个朝代什么时候灭亡，就是背哪个朝代改革对经济，文化的影响。现在想想头都是大的。</p>\n<p>这不是一种好的学习方式，所以我决定，将来我的孩子只要爱看书，历史考零蛋我都不管。</p>\n<p>书的最后写的很好，按照自己喜欢的方式度过这一生，我很喜欢。</p>\n<p>知乎上有这样一个帖子：「读书有什么用？」<br>有一个回答是这样的：你从小到大吃过的饭，当时看起来没有用，只能满足你的胃口，但确实融入了你的身体。现在你看书，看过就忘，并没有什么价值，等你不自觉的用的时，就不会再问这个问题了。</p>\n"},{"layout":"post","title":"PageHelper 在springboot 中的使用","date":"2018-11-01T13:15:06.000Z","description":"分页插件的使用","_content":"分页的逻辑在业务中总是存在，虽说不算复杂，但也必须处理。结合 Mybatis 使用，PageHelper 无疑是最好的选择。\n\n### 引入坐标\n```xml\n<!-- 分页插件pagehelper -->\n<dependency>\n\t<groupId>com.github.pagehelper</groupId>\n\t<artifactId>pagehelper</artifactId>\n\t<version>5.0.0</version>\n</dependency>\n<dependency>\n\t<groupId>com.github.pagehelper</groupId>\n\t<artifactId>pagehelper-spring-boot-autoconfigure</artifactId>\n\t<version>1.2.3</version>\n</dependency>\n<dependency>\n\t<groupId>com.github.pagehelper</groupId>\n\t<artifactId>pagehelper-spring-boot-starter</artifactId>\n\t<version>1.2.3</version>\n</dependency>\n```\n### 配置文件中配置\n```yml\npagehelper:\n  helper-dialect: mysql\n  reasonable: true\n  support-methods-arguments: true\n  params: count=countSql\n```\n### 代码中使用\n```java\n@Override\npublic PageInfo<Article> queryArticleByPage(Integer currentPage, Integer pageSize) {\n\n\tPageHelper.startPage(currentPage, pageSize);\n\tList<Article> list = articleMapper.queryAllArticle();\n\tPageInfo<Article> pageInfo = new PageInfo<>(list);\n\n\treturn pageInfo;\n\n}\n```","source":"_posts/2018-4-20-github-edit.md","raw":"---\nlayout: post\ntitle: \"PageHelper 在springboot 中的使用\"\ndate: 2018-11-01 21:15:06 \ndescription: \"分页插件的使用\"\ntag: SpringBoot\n---\n分页的逻辑在业务中总是存在，虽说不算复杂，但也必须处理。结合 Mybatis 使用，PageHelper 无疑是最好的选择。\n\n### 引入坐标\n```xml\n<!-- 分页插件pagehelper -->\n<dependency>\n\t<groupId>com.github.pagehelper</groupId>\n\t<artifactId>pagehelper</artifactId>\n\t<version>5.0.0</version>\n</dependency>\n<dependency>\n\t<groupId>com.github.pagehelper</groupId>\n\t<artifactId>pagehelper-spring-boot-autoconfigure</artifactId>\n\t<version>1.2.3</version>\n</dependency>\n<dependency>\n\t<groupId>com.github.pagehelper</groupId>\n\t<artifactId>pagehelper-spring-boot-starter</artifactId>\n\t<version>1.2.3</version>\n</dependency>\n```\n### 配置文件中配置\n```yml\npagehelper:\n  helper-dialect: mysql\n  reasonable: true\n  support-methods-arguments: true\n  params: count=countSql\n```\n### 代码中使用\n```java\n@Override\npublic PageInfo<Article> queryArticleByPage(Integer currentPage, Integer pageSize) {\n\n\tPageHelper.startPage(currentPage, pageSize);\n\tList<Article> list = articleMapper.queryAllArticle();\n\tPageInfo<Article> pageInfo = new PageInfo<>(list);\n\n\treturn pageInfo;\n\n}\n```","slug":"2018-4-20-github-edit","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkczw0003yfmybh333fxg","content":"<p>分页的逻辑在业务中总是存在，虽说不算复杂，但也必须处理。结合 Mybatis 使用，PageHelper 无疑是最好的选择。</p>\n<h3 id=\"引入坐标\"><a href=\"#引入坐标\" class=\"headerlink\" title=\"引入坐标\"></a>引入坐标</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 分页插件pagehelper --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件中配置\"><a href=\"#配置文件中配置\" class=\"headerlink\" title=\"配置文件中配置\"></a>配置文件中配置</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pagehelper:</span></span><br><span class=\"line\">  <span class=\"attr\">helper-dialect:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\">  <span class=\"attr\">reasonable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">support-methods-arguments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">params:</span> <span class=\"string\">count=countSql</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"代码中使用\"><a href=\"#代码中使用\" class=\"headerlink\" title=\"代码中使用\"></a>代码中使用</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> PageInfo&lt;Article&gt; <span class=\"title\">queryArticleByPage</span><span class=\"params\">(Integer currentPage, Integer pageSize)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tPageHelper.startPage(currentPage, pageSize);</span><br><span class=\"line\">\tList&lt;Article&gt; list = articleMapper.queryAllArticle();</span><br><span class=\"line\">\tPageInfo&lt;Article&gt; pageInfo = <span class=\"keyword\">new</span> PageInfo&lt;&gt;(list);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pageInfo;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>分页的逻辑在业务中总是存在，虽说不算复杂，但也必须处理。结合 Mybatis 使用，PageHelper 无疑是最好的选择。</p>\n<h3 id=\"引入坐标\"><a href=\"#引入坐标\" class=\"headerlink\" title=\"引入坐标\"></a>引入坐标</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 分页插件pagehelper --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件中配置\"><a href=\"#配置文件中配置\" class=\"headerlink\" title=\"配置文件中配置\"></a>配置文件中配置</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pagehelper:</span></span><br><span class=\"line\">  <span class=\"attr\">helper-dialect:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\">  <span class=\"attr\">reasonable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">support-methods-arguments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">params:</span> <span class=\"string\">count=countSql</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"代码中使用\"><a href=\"#代码中使用\" class=\"headerlink\" title=\"代码中使用\"></a>代码中使用</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> PageInfo&lt;Article&gt; <span class=\"title\">queryArticleByPage</span><span class=\"params\">(Integer currentPage, Integer pageSize)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tPageHelper.startPage(currentPage, pageSize);</span><br><span class=\"line\">\tList&lt;Article&gt; list = articleMapper.queryAllArticle();</span><br><span class=\"line\">\tPageInfo&lt;Article&gt; pageInfo = <span class=\"keyword\">new</span> PageInfo&lt;&gt;(list);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pageInfo;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"你真的看见了吗？","date":"2018-05-19T13:15:06.000Z","description":"看见","_content":"\n\n最近看了柴静的《看见》，还没有看完，看到了现实中好多的无奈，对一些事的认识更加的深入。但也往往意味着深深的无力感。\n\n看到十年前的山西环境是有多么的差。但是焦化产业却占全省GDP的百分之七十。最开始的二十几个项目没有一个达标。觉得怎么治理呢。某一任领导班子说可以把山西是「全国最主要的污染源之一」的「之一」去掉，以此来体现壮士割腕的决心。不到一个月，因为黑砖事件被调去其他地方。讽刺吗？\n\n看到弑夫的女人被判刑，家里的孩子没人看管。我们总说杀人偿命，在家庭暴力面前，却没有法律来保护她们。\n\n看到中国财政2017年总收入17万亿，等于17家烟草总公司。在利润面前，约等于20个阿里巴巴。你觉得可以坚决的停掉烟草吗，有人或许不明白为什么，如果没有烟草的税收，国家的高铁还不能遍布南北东西，我们的第二艘航母或许还是一张图纸。公务员的工资好像还要欠着吧。\n\n等等这些，不知道该怎么办。\n\n以前是没有看过这些事，有个大致的概念，知道这些无奈。没办法。当我真正的了解之后，我觉得需要做些什么，虽然我不知道我能做些什么。\n\n在你看不到的地方，有人默默忍受着，有人默默努力着。\n\n讲一个我自己的事。\n\n我的小舅，无业，身体健康。现在大概40岁左右了吧，不太记得，一直都没怎么关心。之所以没有关心是因为我讨厌他，特别讨厌。为什么呢。在我小的时候，每次只要他来我家，我都很害怕。我要把我的存钱罐赶紧藏起来。他一进我的房间，就会不停地扒我桌子的抽屉。找钱，找吃的。\n\n因为他有精神病，家人都这么说，他打我外婆，问我外婆要钱，没钱给他，就来我家，去我姨家。在我姨家被我姨夫打了一顿之后不去了。老爸没在家。所以我很害怕他。\n\n因为这个，小时候几乎没去过外婆家，就过节去过，跟在老妈背后。\n\n之后懂事一些，不那么害怕他了。也没怎么来我家，就不去想这些了。\n\n他真的有精神病吗，或许有或许没有。我的老妈说他好吃懒做。这么多年了没有赚过一分钱，全靠外婆养着。那他们之间的日常生活是什么样的呢。\n\n我只希望事情越来越好！","source":"_posts/2018-5-19-see.md","raw":"---\nlayout: post\ntitle: \"你真的看见了吗？\"\ndate: 2018-5-19 21:15:06 \ndescription: \"看见\"\ntag: 生活\n---\n\n\n最近看了柴静的《看见》，还没有看完，看到了现实中好多的无奈，对一些事的认识更加的深入。但也往往意味着深深的无力感。\n\n看到十年前的山西环境是有多么的差。但是焦化产业却占全省GDP的百分之七十。最开始的二十几个项目没有一个达标。觉得怎么治理呢。某一任领导班子说可以把山西是「全国最主要的污染源之一」的「之一」去掉，以此来体现壮士割腕的决心。不到一个月，因为黑砖事件被调去其他地方。讽刺吗？\n\n看到弑夫的女人被判刑，家里的孩子没人看管。我们总说杀人偿命，在家庭暴力面前，却没有法律来保护她们。\n\n看到中国财政2017年总收入17万亿，等于17家烟草总公司。在利润面前，约等于20个阿里巴巴。你觉得可以坚决的停掉烟草吗，有人或许不明白为什么，如果没有烟草的税收，国家的高铁还不能遍布南北东西，我们的第二艘航母或许还是一张图纸。公务员的工资好像还要欠着吧。\n\n等等这些，不知道该怎么办。\n\n以前是没有看过这些事，有个大致的概念，知道这些无奈。没办法。当我真正的了解之后，我觉得需要做些什么，虽然我不知道我能做些什么。\n\n在你看不到的地方，有人默默忍受着，有人默默努力着。\n\n讲一个我自己的事。\n\n我的小舅，无业，身体健康。现在大概40岁左右了吧，不太记得，一直都没怎么关心。之所以没有关心是因为我讨厌他，特别讨厌。为什么呢。在我小的时候，每次只要他来我家，我都很害怕。我要把我的存钱罐赶紧藏起来。他一进我的房间，就会不停地扒我桌子的抽屉。找钱，找吃的。\n\n因为他有精神病，家人都这么说，他打我外婆，问我外婆要钱，没钱给他，就来我家，去我姨家。在我姨家被我姨夫打了一顿之后不去了。老爸没在家。所以我很害怕他。\n\n因为这个，小时候几乎没去过外婆家，就过节去过，跟在老妈背后。\n\n之后懂事一些，不那么害怕他了。也没怎么来我家，就不去想这些了。\n\n他真的有精神病吗，或许有或许没有。我的老妈说他好吃懒做。这么多年了没有赚过一分钱，全靠外婆养着。那他们之间的日常生活是什么样的呢。\n\n我只希望事情越来越好！","slug":"2018-5-19-see","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkczy0004yfmyc5fbd1z0","content":"<p>最近看了柴静的《看见》，还没有看完，看到了现实中好多的无奈，对一些事的认识更加的深入。但也往往意味着深深的无力感。</p>\n<p>看到十年前的山西环境是有多么的差。但是焦化产业却占全省GDP的百分之七十。最开始的二十几个项目没有一个达标。觉得怎么治理呢。某一任领导班子说可以把山西是「全国最主要的污染源之一」的「之一」去掉，以此来体现壮士割腕的决心。不到一个月，因为黑砖事件被调去其他地方。讽刺吗？</p>\n<p>看到弑夫的女人被判刑，家里的孩子没人看管。我们总说杀人偿命，在家庭暴力面前，却没有法律来保护她们。</p>\n<p>看到中国财政2017年总收入17万亿，等于17家烟草总公司。在利润面前，约等于20个阿里巴巴。你觉得可以坚决的停掉烟草吗，有人或许不明白为什么，如果没有烟草的税收，国家的高铁还不能遍布南北东西，我们的第二艘航母或许还是一张图纸。公务员的工资好像还要欠着吧。</p>\n<p>等等这些，不知道该怎么办。</p>\n<p>以前是没有看过这些事，有个大致的概念，知道这些无奈。没办法。当我真正的了解之后，我觉得需要做些什么，虽然我不知道我能做些什么。</p>\n<p>在你看不到的地方，有人默默忍受着，有人默默努力着。</p>\n<p>讲一个我自己的事。</p>\n<p>我的小舅，无业，身体健康。现在大概40岁左右了吧，不太记得，一直都没怎么关心。之所以没有关心是因为我讨厌他，特别讨厌。为什么呢。在我小的时候，每次只要他来我家，我都很害怕。我要把我的存钱罐赶紧藏起来。他一进我的房间，就会不停地扒我桌子的抽屉。找钱，找吃的。</p>\n<p>因为他有精神病，家人都这么说，他打我外婆，问我外婆要钱，没钱给他，就来我家，去我姨家。在我姨家被我姨夫打了一顿之后不去了。老爸没在家。所以我很害怕他。</p>\n<p>因为这个，小时候几乎没去过外婆家，就过节去过，跟在老妈背后。</p>\n<p>之后懂事一些，不那么害怕他了。也没怎么来我家，就不去想这些了。</p>\n<p>他真的有精神病吗，或许有或许没有。我的老妈说他好吃懒做。这么多年了没有赚过一分钱，全靠外婆养着。那他们之间的日常生活是什么样的呢。</p>\n<p>我只希望事情越来越好！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近看了柴静的《看见》，还没有看完，看到了现实中好多的无奈，对一些事的认识更加的深入。但也往往意味着深深的无力感。</p>\n<p>看到十年前的山西环境是有多么的差。但是焦化产业却占全省GDP的百分之七十。最开始的二十几个项目没有一个达标。觉得怎么治理呢。某一任领导班子说可以把山西是「全国最主要的污染源之一」的「之一」去掉，以此来体现壮士割腕的决心。不到一个月，因为黑砖事件被调去其他地方。讽刺吗？</p>\n<p>看到弑夫的女人被判刑，家里的孩子没人看管。我们总说杀人偿命，在家庭暴力面前，却没有法律来保护她们。</p>\n<p>看到中国财政2017年总收入17万亿，等于17家烟草总公司。在利润面前，约等于20个阿里巴巴。你觉得可以坚决的停掉烟草吗，有人或许不明白为什么，如果没有烟草的税收，国家的高铁还不能遍布南北东西，我们的第二艘航母或许还是一张图纸。公务员的工资好像还要欠着吧。</p>\n<p>等等这些，不知道该怎么办。</p>\n<p>以前是没有看过这些事，有个大致的概念，知道这些无奈。没办法。当我真正的了解之后，我觉得需要做些什么，虽然我不知道我能做些什么。</p>\n<p>在你看不到的地方，有人默默忍受着，有人默默努力着。</p>\n<p>讲一个我自己的事。</p>\n<p>我的小舅，无业，身体健康。现在大概40岁左右了吧，不太记得，一直都没怎么关心。之所以没有关心是因为我讨厌他，特别讨厌。为什么呢。在我小的时候，每次只要他来我家，我都很害怕。我要把我的存钱罐赶紧藏起来。他一进我的房间，就会不停地扒我桌子的抽屉。找钱，找吃的。</p>\n<p>因为他有精神病，家人都这么说，他打我外婆，问我外婆要钱，没钱给他，就来我家，去我姨家。在我姨家被我姨夫打了一顿之后不去了。老爸没在家。所以我很害怕他。</p>\n<p>因为这个，小时候几乎没去过外婆家，就过节去过，跟在老妈背后。</p>\n<p>之后懂事一些，不那么害怕他了。也没怎么来我家，就不去想这些了。</p>\n<p>他真的有精神病吗，或许有或许没有。我的老妈说他好吃懒做。这么多年了没有赚过一分钱，全靠外婆养着。那他们之间的日常生活是什么样的呢。</p>\n<p>我只希望事情越来越好！</p>\n"},{"layout":"post","title":"两数之和","date":"2019-08-10T13:15:06.000Z","description":"HashMap","_content":"\n\n## 题目\n给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n\n你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。\n\n示例:\n```java\n给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n```\n\n\n\n## 解答\n最容易想到的暴力解决方法，内层循环找到当前元素和 target 的差值，内层循环寻找该差值，找到就返回这两个元素的下标。\n```java\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        for (int i = 0; i < nums.length; i++) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (nums[j] = target - nums[i]) {\n                    return new int[]{i, j};\n                }\n            }\n        }\n        return null;\n    }\n}\n```\n\n使用 HashMap 减少寻找差值的遍历次数，在上边的暴力解法中，第二层循环浪费大量时间，可以使用 HashMap 可以减少时间，每遍历到一个元素，就计算该元素与 target 之间的差值，然后到 HashMap 中寻找该差值，如果找到，则返回两个元素在数组中的下标，如果没有找到，则将当前元素存入 HashMap 中 \n\n```java\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int[] res = new int[2];\n        for (int i = 0; i < nums.length; i++) {\n            int dif = target - nums[i];\n            if (map.get(dif) != null) {\n                res[0] = map.get(dif);\n                res[1] = i;\n                return res;\n            }\n            map.put(nums[i], i);\n        }\n        return res;\n    }\n}\n```\n\n\n转载请注明：[sixkery的博客](http://sixkery.github.io) » [点击阅读原文](http://sixkery.github.io/201/09/ip/)","source":"_posts/2019-08-10-twoSum.md","raw":"---\nlayout: post\ntitle: \"两数之和\"\ndate: 2019-08-10 21:15:06 \ndescription: \"HashMap\"\ntag: LeetCode\n---\n\n\n## 题目\n给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n\n你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。\n\n示例:\n```java\n给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n```\n\n\n\n## 解答\n最容易想到的暴力解决方法，内层循环找到当前元素和 target 的差值，内层循环寻找该差值，找到就返回这两个元素的下标。\n```java\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        for (int i = 0; i < nums.length; i++) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (nums[j] = target - nums[i]) {\n                    return new int[]{i, j};\n                }\n            }\n        }\n        return null;\n    }\n}\n```\n\n使用 HashMap 减少寻找差值的遍历次数，在上边的暴力解法中，第二层循环浪费大量时间，可以使用 HashMap 可以减少时间，每遍历到一个元素，就计算该元素与 target 之间的差值，然后到 HashMap 中寻找该差值，如果找到，则返回两个元素在数组中的下标，如果没有找到，则将当前元素存入 HashMap 中 \n\n```java\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int[] res = new int[2];\n        for (int i = 0; i < nums.length; i++) {\n            int dif = target - nums[i];\n            if (map.get(dif) != null) {\n                res[0] = map.get(dif);\n                res[1] = i;\n                return res;\n            }\n            map.put(nums[i], i);\n        }\n        return res;\n    }\n}\n```\n\n\n转载请注明：[sixkery的博客](http://sixkery.github.io) » [点击阅读原文](http://sixkery.github.io/201/09/ip/)","slug":"2019-08-10-twoSum","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkczz0005yfmy3wqi6zr6","content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p>\n<p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p>\n<p>示例:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定 nums = [<span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>, <span class=\"number\">15</span>], target = <span class=\"number\">9</span></span><br><span class=\"line\"></span><br><span class=\"line\">因为 nums[<span class=\"number\">0</span>] + nums[<span class=\"number\">1</span>] = <span class=\"number\">2</span> + <span class=\"number\">7</span> = <span class=\"number\">9</span></span><br><span class=\"line\">所以返回 [<span class=\"number\">0</span>, <span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><p>最容易想到的暴力解决方法，内层循环找到当前元素和 target 的差值，内层循环寻找该差值，找到就返回这两个元素的下标。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] twoSum(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[j] = target - nums[i]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;i, j&#125;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用 HashMap 减少寻找差值的遍历次数，在上边的暴力解法中，第二层循环浪费大量时间，可以使用 HashMap 可以减少时间，每遍历到一个元素，就计算该元素与 target 之间的差值，然后到 HashMap 中寻找该差值，如果找到，则返回两个元素在数组中的下标，如果没有找到，则将当前元素存入 HashMap 中 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] twoSum(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        HashMap&lt;Integer, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> dif = target - nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.get(dif) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                res[<span class=\"number\">0</span>] = map.get(dif);</span><br><span class=\"line\">                res[<span class=\"number\">1</span>] = i;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.put(nums[i], i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>转载请注明：<a href=\"http://sixkery.github.io\" target=\"_blank\" rel=\"noopener\">sixkery的博客</a> » <a href=\"http://sixkery.github.io/201/09/ip/\" target=\"_blank\" rel=\"noopener\">点击阅读原文</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p>\n<p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p>\n<p>示例:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定 nums = [<span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>, <span class=\"number\">15</span>], target = <span class=\"number\">9</span></span><br><span class=\"line\"></span><br><span class=\"line\">因为 nums[<span class=\"number\">0</span>] + nums[<span class=\"number\">1</span>] = <span class=\"number\">2</span> + <span class=\"number\">7</span> = <span class=\"number\">9</span></span><br><span class=\"line\">所以返回 [<span class=\"number\">0</span>, <span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><p>最容易想到的暴力解决方法，内层循环找到当前元素和 target 的差值，内层循环寻找该差值，找到就返回这两个元素的下标。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] twoSum(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[j] = target - nums[i]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;i, j&#125;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用 HashMap 减少寻找差值的遍历次数，在上边的暴力解法中，第二层循环浪费大量时间，可以使用 HashMap 可以减少时间，每遍历到一个元素，就计算该元素与 target 之间的差值，然后到 HashMap 中寻找该差值，如果找到，则返回两个元素在数组中的下标，如果没有找到，则将当前元素存入 HashMap 中 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] twoSum(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> target) &#123;</span><br><span class=\"line\">        HashMap&lt;Integer, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> dif = target - nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.get(dif) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                res[<span class=\"number\">0</span>] = map.get(dif);</span><br><span class=\"line\">                res[<span class=\"number\">1</span>] = i;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.put(nums[i], i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>转载请注明：<a href=\"http://sixkery.github.io\" target=\"_blank\" rel=\"noopener\">sixkery的博客</a> » <a href=\"http://sixkery.github.io/201/09/ip/\" target=\"_blank\" rel=\"noopener\">点击阅读原文</a></p>\n"},{"layout":"post","title":"分割平衡字符串","date":"2019-09-26T10:15:06.000Z","description":"贪心算法","_content":"\n## 题目\n在一个「平衡字符串」中，'L' 和 'R' 字符的数量是相同的。\n给出一个平衡字符串 s，请你将它分割成尽可能多的平衡字符串。\n\n返回可以通过分割得到的平衡字符串的最大数量。\n\n示例 1：\n```java\n输入：s = \"RLRRLLRLRL\"\n输出：4\n```\n解释：s 可以分割为 \"RL\", \"RRLL\", \"RL\", \"RL\", 每个子字符串中都包含相同数量的 'L' 和 'R'。\n\n示例 2：\n```java\n输入：s = \"RLLLLRRRLR\"\n输出：3\n```\n解释：s 可以分割为 \"RL\", \"LLLRRR\", \"LR\", 每个子字符串中都包含相同数量的 'L' 和 'R'。\n\n示例 3：\n```java\n输入：s = \"LLLLRRRR\"\n输出：1\n```\n解释：s 只能保持原样 \"LLLLRRRR\".\n \n\n提示：\n\n* 1 <= s.length <= 1000\n* s[i] = 'L' 或 'R'\n\n## 解题\n使用对消的思路。从左到右遍历, 根据题意，左边的 'L' 或 'R' 与右边的 'L' 或 'R' 相等。可以根据这个条件进行消除。\n```java\nclass Solution {\n    public int balancedStringSplit(String s) {\n        int a = 0;\n        int b = 0;\n        for (char c : s.toCharArray()) {\n            if (c == 'L') a++;\n            else if (c == 'R') a--;\n            // 每次对消成功 则生成一个平衡子串\n            if (a == 0) b++;\n        }\n        return b;\n    }\n}\n```\n体现的贪心算法，描述说是：贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择，选择的贪心策略必须具备无后效性，即某个状态以前的过程不会影响以后的状态，只与当前状态有关。\n\n在这里理解应该是，对消之前不影响对消之后的结果。\n\n\n<br>\n\n转载请注明：[sixkery的博客](http://sixkery.github.io) » [点击阅读原文](http://sixkery.github.io/201/09/ip/)","source":"_posts/2019-09-26-ip.md","raw":"---\nlayout: post\ntitle: \"分割平衡字符串\"\ndate: 2019-09-26 18:15:06 \ndescription: \"贪心算法\"\ntag: LeetCode\n---\n\n## 题目\n在一个「平衡字符串」中，'L' 和 'R' 字符的数量是相同的。\n给出一个平衡字符串 s，请你将它分割成尽可能多的平衡字符串。\n\n返回可以通过分割得到的平衡字符串的最大数量。\n\n示例 1：\n```java\n输入：s = \"RLRRLLRLRL\"\n输出：4\n```\n解释：s 可以分割为 \"RL\", \"RRLL\", \"RL\", \"RL\", 每个子字符串中都包含相同数量的 'L' 和 'R'。\n\n示例 2：\n```java\n输入：s = \"RLLLLRRRLR\"\n输出：3\n```\n解释：s 可以分割为 \"RL\", \"LLLRRR\", \"LR\", 每个子字符串中都包含相同数量的 'L' 和 'R'。\n\n示例 3：\n```java\n输入：s = \"LLLLRRRR\"\n输出：1\n```\n解释：s 只能保持原样 \"LLLLRRRR\".\n \n\n提示：\n\n* 1 <= s.length <= 1000\n* s[i] = 'L' 或 'R'\n\n## 解题\n使用对消的思路。从左到右遍历, 根据题意，左边的 'L' 或 'R' 与右边的 'L' 或 'R' 相等。可以根据这个条件进行消除。\n```java\nclass Solution {\n    public int balancedStringSplit(String s) {\n        int a = 0;\n        int b = 0;\n        for (char c : s.toCharArray()) {\n            if (c == 'L') a++;\n            else if (c == 'R') a--;\n            // 每次对消成功 则生成一个平衡子串\n            if (a == 0) b++;\n        }\n        return b;\n    }\n}\n```\n体现的贪心算法，描述说是：贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择，选择的贪心策略必须具备无后效性，即某个状态以前的过程不会影响以后的状态，只与当前状态有关。\n\n在这里理解应该是，对消之前不影响对消之后的结果。\n\n\n<br>\n\n转载请注明：[sixkery的博客](http://sixkery.github.io) » [点击阅读原文](http://sixkery.github.io/201/09/ip/)","slug":"2019-09-26-ip","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd010008yfmyg4o7exdk","content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>在一个「平衡字符串」中，’L’ 和 ‘R’ 字符的数量是相同的。<br>给出一个平衡字符串 s，请你将它分割成尽可能多的平衡字符串。</p>\n<p>返回可以通过分割得到的平衡字符串的最大数量。</p>\n<p>示例 1：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = <span class=\"string\">\"RLRRLLRLRL\"</span></span><br><span class=\"line\">输出：<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<p>解释：s 可以分割为 “RL”, “RRLL”, “RL”, “RL”, 每个子字符串中都包含相同数量的 ‘L’ 和 ‘R’。</p>\n<p>示例 2：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = <span class=\"string\">\"RLLLLRRRLR\"</span></span><br><span class=\"line\">输出：<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>解释：s 可以分割为 “RL”, “LLLRRR”, “LR”, 每个子字符串中都包含相同数量的 ‘L’ 和 ‘R’。</p>\n<p>示例 3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = <span class=\"string\">\"LLLLRRRR\"</span></span><br><span class=\"line\">输出：<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>解释：s 只能保持原样 “LLLLRRRR”.</p>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= s.length &lt;= 1000</li>\n<li>s[i] = ‘L’ 或 ‘R’</li>\n</ul>\n<h2 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h2><p>使用对消的思路。从左到右遍历, 根据题意，左边的 ‘L’ 或 ‘R’ 与右边的 ‘L’ 或 ‘R’ 相等。可以根据这个条件进行消除。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">balancedStringSplit</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> c : s.toCharArray()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c == <span class=\"string\">'L'</span>) a++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"string\">'R'</span>) a--;</span><br><span class=\"line\">            <span class=\"comment\">// 每次对消成功 则生成一个平衡子串</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a == <span class=\"number\">0</span>) b++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>体现的贪心算法，描述说是：贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择，选择的贪心策略必须具备无后效性，即某个状态以前的过程不会影响以后的状态，只与当前状态有关。</p>\n<p>在这里理解应该是，对消之前不影响对消之后的结果。</p>\n<br>\n\n<p>转载请注明：<a href=\"http://sixkery.github.io\" target=\"_blank\" rel=\"noopener\">sixkery的博客</a> » <a href=\"http://sixkery.github.io/201/09/ip/\" target=\"_blank\" rel=\"noopener\">点击阅读原文</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>在一个「平衡字符串」中，’L’ 和 ‘R’ 字符的数量是相同的。<br>给出一个平衡字符串 s，请你将它分割成尽可能多的平衡字符串。</p>\n<p>返回可以通过分割得到的平衡字符串的最大数量。</p>\n<p>示例 1：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = <span class=\"string\">\"RLRRLLRLRL\"</span></span><br><span class=\"line\">输出：<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<p>解释：s 可以分割为 “RL”, “RRLL”, “RL”, “RL”, 每个子字符串中都包含相同数量的 ‘L’ 和 ‘R’。</p>\n<p>示例 2：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = <span class=\"string\">\"RLLLLRRRLR\"</span></span><br><span class=\"line\">输出：<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>解释：s 可以分割为 “RL”, “LLLRRR”, “LR”, 每个子字符串中都包含相同数量的 ‘L’ 和 ‘R’。</p>\n<p>示例 3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = <span class=\"string\">\"LLLLRRRR\"</span></span><br><span class=\"line\">输出：<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>解释：s 只能保持原样 “LLLLRRRR”.</p>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= s.length &lt;= 1000</li>\n<li>s[i] = ‘L’ 或 ‘R’</li>\n</ul>\n<h2 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h2><p>使用对消的思路。从左到右遍历, 根据题意，左边的 ‘L’ 或 ‘R’ 与右边的 ‘L’ 或 ‘R’ 相等。可以根据这个条件进行消除。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">balancedStringSplit</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> c : s.toCharArray()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c == <span class=\"string\">'L'</span>) a++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"string\">'R'</span>) a--;</span><br><span class=\"line\">            <span class=\"comment\">// 每次对消成功 则生成一个平衡子串</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a == <span class=\"number\">0</span>) b++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>体现的贪心算法，描述说是：贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择，选择的贪心策略必须具备无后效性，即某个状态以前的过程不会影响以后的状态，只与当前状态有关。</p>\n<p>在这里理解应该是，对消之前不影响对消之后的结果。</p>\n<br>\n\n<p>转载请注明：<a href=\"http://sixkery.github.io\" target=\"_blank\" rel=\"noopener\">sixkery的博客</a> » <a href=\"http://sixkery.github.io/201/09/ip/\" target=\"_blank\" rel=\"noopener\">点击阅读原文</a></p>\n"},{"layout":"post","title":"Git命令","date":"2018-09-01T13:15:06.000Z","description":"工具","_content":"\n\n### Git\n\n1. git init : 初始化仓库，把这个目录变成 Git 可以管理的仓库。创建完成之后，目录下多出来一个 「.git」目录\n2. git add 「文件名」或 「.」: 把文件名添加到暂存区，或把当前目录下的所有文件添加到暂存区。\n3. git commit -m 「日志信息」: 把文件添加到本地仓库。\n4. git status : 查看当前仓库的状态。\n5. git diff : 修改的内容是什么。查看工作区的修改和仓库中的文件有那些区别。diff : 即是 difference\n6. git log : 查看历史记录，倒序排列，最近一次在最上边。第一次提交在最下边。\n7. git commit -a : 添加暂存区并提交，然后在跳出的 vim 编辑器中切换到编辑模式「i」,写入日志信息。切换到普通模式「esc」。然后「:wq」保存并退出。\n8. git log --pretty=oneline : 可以只查看提交的 commit id (版本号)和提交的日志信息。倒序排列。\n9. git reset --hard HEAD^ : 回退到上一个版本。「HEAD」代表当前版本，`「^」`代表上一个版本。上上个版本「^^」两个。commit_id 可以只写前面几位。\n   HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令 git reset --hard commit_id。\n   穿梭前，用 git log 可以查看提交历史，以便确定要回退到哪个版本。\n   要重返未来，用 git reflog 查看命令历史，以便确定要回到未来的哪个版本\n10. 撤销修改\n    场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令`git checkout -- file`。或者直接删除。\n\t\n    场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令`git reset HEAD <file>`，把暂存区的修改撤销掉。就回到了场景1，第二步按场景1操作 `git checkout --file`。\n\t\n    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考9，不过前提是没有推送到远程库。\n\t\n11. 关联远程仓库 : `git remote add origin git@github.com:sixkery/repo-name.git` 。\n    关联后使用命令 `git push -u origin master` 第一次推送 master 分支到远程仓库。\n\n    以后的提交使用 `git push origin master` 或 `git push`\n\n12. 从远程仓库克隆一个仓库\n    : `git clone 仓库地址`\n\n### 分支管理\n\n1. `git checkout -b dev` 创建分支并切换到新创建的分支 :\n2. `git branch dev`  : 创建分支\n3. `git checkout dev` : 切换分支 或 命名 git switch\n4. git branch : 查看当前分支。当前分支会有一个`「*」`号\n\n5. git merge : 合并指定分支到当前分支。注：这是要在指定分支上完成操作。例：在 master 分支上创建分支 dev 。切换到 dev 分支。完成几个功能，然后准备合并分支。这时需要切换到 master 分支。执行命令 git mege 命令。这时 master 分支就和 dev 分支合并。当前 HEAD 指向 master 分支。就可以删除 dev 分支。\n\n6. git branch -d <分支名字> : 删除分支\n7. git log --graph : 查看分支合并图\n8. git merge --no-ff -m \"merge with no-ff\" dev : 合并 dev 分支，可以看到曾经做过的合并。开发中尽量使用这个。\n9. 假设现在在 dev 分支上开发某个功能。这时需要你去修复一个 bug ，正常情况下，你会切换到 master 分支上「git checkout master」创建一个新的分支 issue-01「git checkout -b issue-01」 来修复这个 bug 。但是，你现在的 dev 分支上还有任务没有完成。这时候怎么办？\n\n   这是可以使用 git stash 命令，把当前 dev 分支上的工作现场存储起来。切换到 master 分支，创建 issue-01 分支修改 bug 。**修改完了 bug 提交这次修改**。切换到 master 分支。合并 issue-01 分支。之后就可以回到 dev 分支。使用命令git stash list 查看暂存的工作现场。需要恢复一下工作现场，使用命令 git stash pop 。这个命令可以把暂存的工作现场删除。这时就可以接着在 dev 分支上完成功能。当时请想一想。master 分支上的 bug 。在 dev 上是不是也存在呢。这时就需要把提交 bug 的修改复制到当前分支。使用命令 git cherry-pick <commit_id> 这里的 commit_id 是修改 bug 的提交 commit_id。\n\n10. 开发一个新的功能，最好新建一个分支：`git checkout -b feature-login` 然后提交新的功能。开发完成之后在 dev 分支上合并新的功能。如果没有合并，不想要这个功能可以使用命令 `git branch -D <分支名称>` 删除这个分支。（这里是强制删除分支上的内容，不过一般不建议这么干，万一那天产品经理抽风了呢）\n\n### 多人协助\n\n从远程仓库中克隆到本地 「git clone 远程仓库地址」，远程仓库就和本地仓库对应起来。\n\ngit remote : 查看远程仓库的信息。\n\ngit remote -v : 显示详细信息，可以查看抓取和推送的地址。如果没有推送权限，看不到推送地址。\n\n推送分支，把本地的分支推送到远程仓库中：`git push origin master` 。如果推送其他分支比如 dev 使用命令 : `git push origin dev` ","source":"_posts/2018-9-01-git.md","raw":"---\nlayout: post\ntitle: \"Git命令\"\ndate: 2018-9-01 21:15:06 \ndescription: \"工具\"\ntag: Git\n---\n\n\n### Git\n\n1. git init : 初始化仓库，把这个目录变成 Git 可以管理的仓库。创建完成之后，目录下多出来一个 「.git」目录\n2. git add 「文件名」或 「.」: 把文件名添加到暂存区，或把当前目录下的所有文件添加到暂存区。\n3. git commit -m 「日志信息」: 把文件添加到本地仓库。\n4. git status : 查看当前仓库的状态。\n5. git diff : 修改的内容是什么。查看工作区的修改和仓库中的文件有那些区别。diff : 即是 difference\n6. git log : 查看历史记录，倒序排列，最近一次在最上边。第一次提交在最下边。\n7. git commit -a : 添加暂存区并提交，然后在跳出的 vim 编辑器中切换到编辑模式「i」,写入日志信息。切换到普通模式「esc」。然后「:wq」保存并退出。\n8. git log --pretty=oneline : 可以只查看提交的 commit id (版本号)和提交的日志信息。倒序排列。\n9. git reset --hard HEAD^ : 回退到上一个版本。「HEAD」代表当前版本，`「^」`代表上一个版本。上上个版本「^^」两个。commit_id 可以只写前面几位。\n   HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令 git reset --hard commit_id。\n   穿梭前，用 git log 可以查看提交历史，以便确定要回退到哪个版本。\n   要重返未来，用 git reflog 查看命令历史，以便确定要回到未来的哪个版本\n10. 撤销修改\n    场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令`git checkout -- file`。或者直接删除。\n\t\n    场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令`git reset HEAD <file>`，把暂存区的修改撤销掉。就回到了场景1，第二步按场景1操作 `git checkout --file`。\n\t\n    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考9，不过前提是没有推送到远程库。\n\t\n11. 关联远程仓库 : `git remote add origin git@github.com:sixkery/repo-name.git` 。\n    关联后使用命令 `git push -u origin master` 第一次推送 master 分支到远程仓库。\n\n    以后的提交使用 `git push origin master` 或 `git push`\n\n12. 从远程仓库克隆一个仓库\n    : `git clone 仓库地址`\n\n### 分支管理\n\n1. `git checkout -b dev` 创建分支并切换到新创建的分支 :\n2. `git branch dev`  : 创建分支\n3. `git checkout dev` : 切换分支 或 命名 git switch\n4. git branch : 查看当前分支。当前分支会有一个`「*」`号\n\n5. git merge : 合并指定分支到当前分支。注：这是要在指定分支上完成操作。例：在 master 分支上创建分支 dev 。切换到 dev 分支。完成几个功能，然后准备合并分支。这时需要切换到 master 分支。执行命令 git mege 命令。这时 master 分支就和 dev 分支合并。当前 HEAD 指向 master 分支。就可以删除 dev 分支。\n\n6. git branch -d <分支名字> : 删除分支\n7. git log --graph : 查看分支合并图\n8. git merge --no-ff -m \"merge with no-ff\" dev : 合并 dev 分支，可以看到曾经做过的合并。开发中尽量使用这个。\n9. 假设现在在 dev 分支上开发某个功能。这时需要你去修复一个 bug ，正常情况下，你会切换到 master 分支上「git checkout master」创建一个新的分支 issue-01「git checkout -b issue-01」 来修复这个 bug 。但是，你现在的 dev 分支上还有任务没有完成。这时候怎么办？\n\n   这是可以使用 git stash 命令，把当前 dev 分支上的工作现场存储起来。切换到 master 分支，创建 issue-01 分支修改 bug 。**修改完了 bug 提交这次修改**。切换到 master 分支。合并 issue-01 分支。之后就可以回到 dev 分支。使用命令git stash list 查看暂存的工作现场。需要恢复一下工作现场，使用命令 git stash pop 。这个命令可以把暂存的工作现场删除。这时就可以接着在 dev 分支上完成功能。当时请想一想。master 分支上的 bug 。在 dev 上是不是也存在呢。这时就需要把提交 bug 的修改复制到当前分支。使用命令 git cherry-pick <commit_id> 这里的 commit_id 是修改 bug 的提交 commit_id。\n\n10. 开发一个新的功能，最好新建一个分支：`git checkout -b feature-login` 然后提交新的功能。开发完成之后在 dev 分支上合并新的功能。如果没有合并，不想要这个功能可以使用命令 `git branch -D <分支名称>` 删除这个分支。（这里是强制删除分支上的内容，不过一般不建议这么干，万一那天产品经理抽风了呢）\n\n### 多人协助\n\n从远程仓库中克隆到本地 「git clone 远程仓库地址」，远程仓库就和本地仓库对应起来。\n\ngit remote : 查看远程仓库的信息。\n\ngit remote -v : 显示详细信息，可以查看抓取和推送的地址。如果没有推送权限，看不到推送地址。\n\n推送分支，把本地的分支推送到远程仓库中：`git push origin master` 。如果推送其他分支比如 dev 使用命令 : `git push origin dev` ","slug":"2018-9-01-git","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd020009yfmy0du86495","content":"<h3 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h3><ol>\n<li><p>git init : 初始化仓库，把这个目录变成 Git 可以管理的仓库。创建完成之后，目录下多出来一个 「.git」目录</p>\n</li>\n<li><p>git add 「文件名」或 「.」: 把文件名添加到暂存区，或把当前目录下的所有文件添加到暂存区。</p>\n</li>\n<li><p>git commit -m 「日志信息」: 把文件添加到本地仓库。</p>\n</li>\n<li><p>git status : 查看当前仓库的状态。</p>\n</li>\n<li><p>git diff : 修改的内容是什么。查看工作区的修改和仓库中的文件有那些区别。diff : 即是 difference</p>\n</li>\n<li><p>git log : 查看历史记录，倒序排列，最近一次在最上边。第一次提交在最下边。</p>\n</li>\n<li><p>git commit -a : 添加暂存区并提交，然后在跳出的 vim 编辑器中切换到编辑模式「i」,写入日志信息。切换到普通模式「esc」。然后「:wq」保存并退出。</p>\n</li>\n<li><p>git log –pretty=oneline : 可以只查看提交的 commit id (版本号)和提交的日志信息。倒序排列。</p>\n</li>\n<li><p>git reset –hard HEAD^ : 回退到上一个版本。「HEAD」代表当前版本，<code>「^」</code>代表上一个版本。上上个版本「^^」两个。commit_id 可以只写前面几位。<br>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令 git reset –hard commit_id。<br>穿梭前，用 git log 可以查看提交历史，以便确定要回退到哪个版本。<br>要重返未来，用 git reflog 查看命令历史，以便确定要回到未来的哪个版本</p>\n</li>\n<li><p>撤销修改<br>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。或者直接删除。</p>\n<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，把暂存区的修改撤销掉。就回到了场景1，第二步按场景1操作 <code>git checkout --file</code>。</p>\n<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考9，不过前提是没有推送到远程库。</p>\n</li>\n<li><p>关联远程仓库 : <code>git remote add origin git@github.com:sixkery/repo-name.git</code> 。<br>关联后使用命令 <code>git push -u origin master</code> 第一次推送 master 分支到远程仓库。</p>\n<p>以后的提交使用 <code>git push origin master</code> 或 <code>git push</code></p>\n</li>\n<li><dl><dt>从远程仓库克隆一个仓库</dt><dd><code>git clone 仓库地址</code></dd></dl></li>\n</ol>\n<h3 id=\"分支管理\"><a href=\"#分支管理\" class=\"headerlink\" title=\"分支管理\"></a>分支管理</h3><ol>\n<li><p><code>git checkout -b dev</code> 创建分支并切换到新创建的分支 :</p>\n</li>\n<li><p><code>git branch dev</code>  : 创建分支</p>\n</li>\n<li><p><code>git checkout dev</code> : 切换分支 或 命名 git switch</p>\n</li>\n<li><p>git branch : 查看当前分支。当前分支会有一个<code>「*」</code>号</p>\n</li>\n<li><p>git merge : 合并指定分支到当前分支。注：这是要在指定分支上完成操作。例：在 master 分支上创建分支 dev 。切换到 dev 分支。完成几个功能，然后准备合并分支。这时需要切换到 master 分支。执行命令 git mege 命令。这时 master 分支就和 dev 分支合并。当前 HEAD 指向 master 分支。就可以删除 dev 分支。</p>\n</li>\n<li><p>git branch -d &lt;分支名字&gt; : 删除分支</p>\n</li>\n<li><p>git log –graph : 查看分支合并图</p>\n</li>\n<li><p>git merge –no-ff -m “merge with no-ff” dev : 合并 dev 分支，可以看到曾经做过的合并。开发中尽量使用这个。</p>\n</li>\n<li><p>假设现在在 dev 分支上开发某个功能。这时需要你去修复一个 bug ，正常情况下，你会切换到 master 分支上「git checkout master」创建一个新的分支 issue-01「git checkout -b issue-01」 来修复这个 bug 。但是，你现在的 dev 分支上还有任务没有完成。这时候怎么办？</p>\n<p>这是可以使用 git stash 命令，把当前 dev 分支上的工作现场存储起来。切换到 master 分支，创建 issue-01 分支修改 bug 。<strong>修改完了 bug 提交这次修改</strong>。切换到 master 分支。合并 issue-01 分支。之后就可以回到 dev 分支。使用命令git stash list 查看暂存的工作现场。需要恢复一下工作现场，使用命令 git stash pop 。这个命令可以把暂存的工作现场删除。这时就可以接着在 dev 分支上完成功能。当时请想一想。master 分支上的 bug 。在 dev 上是不是也存在呢。这时就需要把提交 bug 的修改复制到当前分支。使用命令 git cherry-pick <commit_id> 这里的 commit_id 是修改 bug 的提交 commit_id。</p>\n</li>\n<li><p>开发一个新的功能，最好新建一个分支：<code>git checkout -b feature-login</code> 然后提交新的功能。开发完成之后在 dev 分支上合并新的功能。如果没有合并，不想要这个功能可以使用命令 <code>git branch -D &lt;分支名称&gt;</code> 删除这个分支。（这里是强制删除分支上的内容，不过一般不建议这么干，万一那天产品经理抽风了呢）</p>\n</li>\n</ol>\n<h3 id=\"多人协助\"><a href=\"#多人协助\" class=\"headerlink\" title=\"多人协助\"></a>多人协助</h3><p>从远程仓库中克隆到本地 「git clone 远程仓库地址」，远程仓库就和本地仓库对应起来。</p>\n<p>git remote : 查看远程仓库的信息。</p>\n<p>git remote -v : 显示详细信息，可以查看抓取和推送的地址。如果没有推送权限，看不到推送地址。</p>\n<p>推送分支，把本地的分支推送到远程仓库中：<code>git push origin master</code> 。如果推送其他分支比如 dev 使用命令 : <code>git push origin dev</code> </p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h3><ol>\n<li><p>git init : 初始化仓库，把这个目录变成 Git 可以管理的仓库。创建完成之后，目录下多出来一个 「.git」目录</p>\n</li>\n<li><p>git add 「文件名」或 「.」: 把文件名添加到暂存区，或把当前目录下的所有文件添加到暂存区。</p>\n</li>\n<li><p>git commit -m 「日志信息」: 把文件添加到本地仓库。</p>\n</li>\n<li><p>git status : 查看当前仓库的状态。</p>\n</li>\n<li><p>git diff : 修改的内容是什么。查看工作区的修改和仓库中的文件有那些区别。diff : 即是 difference</p>\n</li>\n<li><p>git log : 查看历史记录，倒序排列，最近一次在最上边。第一次提交在最下边。</p>\n</li>\n<li><p>git commit -a : 添加暂存区并提交，然后在跳出的 vim 编辑器中切换到编辑模式「i」,写入日志信息。切换到普通模式「esc」。然后「:wq」保存并退出。</p>\n</li>\n<li><p>git log –pretty=oneline : 可以只查看提交的 commit id (版本号)和提交的日志信息。倒序排列。</p>\n</li>\n<li><p>git reset –hard HEAD^ : 回退到上一个版本。「HEAD」代表当前版本，<code>「^」</code>代表上一个版本。上上个版本「^^」两个。commit_id 可以只写前面几位。<br>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令 git reset –hard commit_id。<br>穿梭前，用 git log 可以查看提交历史，以便确定要回退到哪个版本。<br>要重返未来，用 git reflog 查看命令历史，以便确定要回到未来的哪个版本</p>\n</li>\n<li><p>撤销修改<br>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。或者直接删除。</p>\n<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，把暂存区的修改撤销掉。就回到了场景1，第二步按场景1操作 <code>git checkout --file</code>。</p>\n<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考9，不过前提是没有推送到远程库。</p>\n</li>\n<li><p>关联远程仓库 : <code>git remote add origin git@github.com:sixkery/repo-name.git</code> 。<br>关联后使用命令 <code>git push -u origin master</code> 第一次推送 master 分支到远程仓库。</p>\n<p>以后的提交使用 <code>git push origin master</code> 或 <code>git push</code></p>\n</li>\n<li><dl><dt>从远程仓库克隆一个仓库</dt><dd><code>git clone 仓库地址</code></dd></dl></li>\n</ol>\n<h3 id=\"分支管理\"><a href=\"#分支管理\" class=\"headerlink\" title=\"分支管理\"></a>分支管理</h3><ol>\n<li><p><code>git checkout -b dev</code> 创建分支并切换到新创建的分支 :</p>\n</li>\n<li><p><code>git branch dev</code>  : 创建分支</p>\n</li>\n<li><p><code>git checkout dev</code> : 切换分支 或 命名 git switch</p>\n</li>\n<li><p>git branch : 查看当前分支。当前分支会有一个<code>「*」</code>号</p>\n</li>\n<li><p>git merge : 合并指定分支到当前分支。注：这是要在指定分支上完成操作。例：在 master 分支上创建分支 dev 。切换到 dev 分支。完成几个功能，然后准备合并分支。这时需要切换到 master 分支。执行命令 git mege 命令。这时 master 分支就和 dev 分支合并。当前 HEAD 指向 master 分支。就可以删除 dev 分支。</p>\n</li>\n<li><p>git branch -d &lt;分支名字&gt; : 删除分支</p>\n</li>\n<li><p>git log –graph : 查看分支合并图</p>\n</li>\n<li><p>git merge –no-ff -m “merge with no-ff” dev : 合并 dev 分支，可以看到曾经做过的合并。开发中尽量使用这个。</p>\n</li>\n<li><p>假设现在在 dev 分支上开发某个功能。这时需要你去修复一个 bug ，正常情况下，你会切换到 master 分支上「git checkout master」创建一个新的分支 issue-01「git checkout -b issue-01」 来修复这个 bug 。但是，你现在的 dev 分支上还有任务没有完成。这时候怎么办？</p>\n<p>这是可以使用 git stash 命令，把当前 dev 分支上的工作现场存储起来。切换到 master 分支，创建 issue-01 分支修改 bug 。<strong>修改完了 bug 提交这次修改</strong>。切换到 master 分支。合并 issue-01 分支。之后就可以回到 dev 分支。使用命令git stash list 查看暂存的工作现场。需要恢复一下工作现场，使用命令 git stash pop 。这个命令可以把暂存的工作现场删除。这时就可以接着在 dev 分支上完成功能。当时请想一想。master 分支上的 bug 。在 dev 上是不是也存在呢。这时就需要把提交 bug 的修改复制到当前分支。使用命令 git cherry-pick <commit_id> 这里的 commit_id 是修改 bug 的提交 commit_id。</p>\n</li>\n<li><p>开发一个新的功能，最好新建一个分支：<code>git checkout -b feature-login</code> 然后提交新的功能。开发完成之后在 dev 分支上合并新的功能。如果没有合并，不想要这个功能可以使用命令 <code>git branch -D &lt;分支名称&gt;</code> 删除这个分支。（这里是强制删除分支上的内容，不过一般不建议这么干，万一那天产品经理抽风了呢）</p>\n</li>\n</ol>\n<h3 id=\"多人协助\"><a href=\"#多人协助\" class=\"headerlink\" title=\"多人协助\"></a>多人协助</h3><p>从远程仓库中克隆到本地 「git clone 远程仓库地址」，远程仓库就和本地仓库对应起来。</p>\n<p>git remote : 查看远程仓库的信息。</p>\n<p>git remote -v : 显示详细信息，可以查看抓取和推送的地址。如果没有推送权限，看不到推送地址。</p>\n<p>推送分支，把本地的分支推送到远程仓库中：<code>git push origin master</code> 。如果推送其他分支比如 dev 使用命令 : <code>git push origin dev</code> </p>\n"},{"layout":"post","title":"Markdown 格式转换成 HTML","date":"2019-03-11T13:15:06.000Z","description":"工具类","_content":"\nmaven 中导入依赖\n```xml\n<!--markdown 编辑的依赖-->\n<dependency>\n\t<groupId>com.atlassian.commonmark</groupId>\n\t<artifactId>commonmark</artifactId>\n\t<version>0.10.0</version>\n</dependency>\n\n<!--添加 markdown 扩展-->\n<dependency>\n\t<groupId>com.atlassian.commonmark</groupId>\n\t<artifactId>commonmark-ext-heading-anchor</artifactId>\n\t<version>0.10.0</version>\n</dependency>\n<!--添加 markdown 扩展-->\n<dependency>\n\t<groupId>com.atlassian.commonmark</groupId>\n\t<artifactId>commonmark-ext-gfm-tables</artifactId>\n\t<version>0.10.0</version>\n</dependency>\n```\n工具类\n```java\npackage com.sixkery.util;\n\nimport org.commonmark.Extension;\nimport org.commonmark.ext.gfm.tables.TableBlock;\nimport org.commonmark.ext.gfm.tables.TablesExtension;\nimport org.commonmark.ext.heading.anchor.HeadingAnchorExtension;\nimport org.commonmark.node.Link;\nimport org.commonmark.node.Node;\nimport org.commonmark.parser.Parser;\nimport org.commonmark.renderer.html.AttributeProvider;\nimport org.commonmark.renderer.html.AttributeProviderContext;\nimport org.commonmark.renderer.html.AttributeProviderFactory;\nimport org.commonmark.renderer.html.HtmlRenderer;\n\nimport java.util.*;\n\n/**\n * markdown格式转换成 HTML 格式\n * @author sixkery\n */\npublic class MarkdownUtils {\n\n    /**\n     * markdown格式转换成HTML格式\n     * @param markdown\n     * @return\n     */\n    public static String markdownToHtml(String markdown) {\n        Parser parser = Parser.builder().build();\n        Node document = parser.parse(markdown);\n        HtmlRenderer renderer = HtmlRenderer.builder().build();\n        return renderer.render(document);\n    }\n\n    /**\n     * 增加扩展[标题锚点，表格生成]\n     * Markdown转换成HTML\n     * @param markdown\n     * @return\n     */\n    public static String markdownToHtmlExtensions(String markdown) {\n        //h 标题生成 id\n        Set<Extension> headingAnchorExtensions = Collections.singleton(HeadingAnchorExtension.create());\n        //转换table的HTML\n        List<Extension> tableExtension = Arrays.asList(TablesExtension.create());\n        Parser parser = Parser.builder()\n                .extensions(tableExtension)\n                .build();\n        Node document = parser.parse(markdown);\n        HtmlRenderer renderer = HtmlRenderer.builder()\n                .extensions(headingAnchorExtensions)\n                .extensions(tableExtension)\n                .attributeProviderFactory(new AttributeProviderFactory() {\n                    public AttributeProvider create(AttributeProviderContext context) {\n                        return new CustomAttributeProvider();\n                    }\n                })\n                .build();\n        return renderer.render(document);\n    }\n\n    /**\n     * 处理标签的属性\n     */\n    static class CustomAttributeProvider implements AttributeProvider {\n        @Override\n        public void setAttributes(Node node, String tagName, Map<String, String> attributes) {\n            //改变a标签的target属性为_blank\n            if (node instanceof Link) {\n                attributes.put(\"target\", \"_blank\");\n            }\n            if (node instanceof TableBlock) {\n                attributes.put(\"class\", \"ui celled table\");\n            }\n        }\n    }\n\n\n    public static void main(String[] args) {\n        String table = \"| hello | hi   | 哈哈哈   |\\n\" +\n                \"| ----- | ---- | ----- |\\n\" +\n                \"| 斯维尔多  | 士大夫  | f啊    |\\n\" +\n                \"| 阿什顿发  | 非固定杆 | 撒阿什顿发 |\\n\" +\n                \"\\n\";\n        String a = \"[imCoding 爱编程](http://www.lirenmi.cn)\";\n        System.out.println(markdownToHtmlExtensions(table));\n    }\n}\n\n```\n","source":"_posts/2019-3-11 21-Markdown.md","raw":"---\nlayout: post\ntitle: \"Markdown 格式转换成 HTML\"\ndate: 2019-3-11 21:15:06 \ndescription: \"工具类\"\ntag: SpringBoot\n---\n\nmaven 中导入依赖\n```xml\n<!--markdown 编辑的依赖-->\n<dependency>\n\t<groupId>com.atlassian.commonmark</groupId>\n\t<artifactId>commonmark</artifactId>\n\t<version>0.10.0</version>\n</dependency>\n\n<!--添加 markdown 扩展-->\n<dependency>\n\t<groupId>com.atlassian.commonmark</groupId>\n\t<artifactId>commonmark-ext-heading-anchor</artifactId>\n\t<version>0.10.0</version>\n</dependency>\n<!--添加 markdown 扩展-->\n<dependency>\n\t<groupId>com.atlassian.commonmark</groupId>\n\t<artifactId>commonmark-ext-gfm-tables</artifactId>\n\t<version>0.10.0</version>\n</dependency>\n```\n工具类\n```java\npackage com.sixkery.util;\n\nimport org.commonmark.Extension;\nimport org.commonmark.ext.gfm.tables.TableBlock;\nimport org.commonmark.ext.gfm.tables.TablesExtension;\nimport org.commonmark.ext.heading.anchor.HeadingAnchorExtension;\nimport org.commonmark.node.Link;\nimport org.commonmark.node.Node;\nimport org.commonmark.parser.Parser;\nimport org.commonmark.renderer.html.AttributeProvider;\nimport org.commonmark.renderer.html.AttributeProviderContext;\nimport org.commonmark.renderer.html.AttributeProviderFactory;\nimport org.commonmark.renderer.html.HtmlRenderer;\n\nimport java.util.*;\n\n/**\n * markdown格式转换成 HTML 格式\n * @author sixkery\n */\npublic class MarkdownUtils {\n\n    /**\n     * markdown格式转换成HTML格式\n     * @param markdown\n     * @return\n     */\n    public static String markdownToHtml(String markdown) {\n        Parser parser = Parser.builder().build();\n        Node document = parser.parse(markdown);\n        HtmlRenderer renderer = HtmlRenderer.builder().build();\n        return renderer.render(document);\n    }\n\n    /**\n     * 增加扩展[标题锚点，表格生成]\n     * Markdown转换成HTML\n     * @param markdown\n     * @return\n     */\n    public static String markdownToHtmlExtensions(String markdown) {\n        //h 标题生成 id\n        Set<Extension> headingAnchorExtensions = Collections.singleton(HeadingAnchorExtension.create());\n        //转换table的HTML\n        List<Extension> tableExtension = Arrays.asList(TablesExtension.create());\n        Parser parser = Parser.builder()\n                .extensions(tableExtension)\n                .build();\n        Node document = parser.parse(markdown);\n        HtmlRenderer renderer = HtmlRenderer.builder()\n                .extensions(headingAnchorExtensions)\n                .extensions(tableExtension)\n                .attributeProviderFactory(new AttributeProviderFactory() {\n                    public AttributeProvider create(AttributeProviderContext context) {\n                        return new CustomAttributeProvider();\n                    }\n                })\n                .build();\n        return renderer.render(document);\n    }\n\n    /**\n     * 处理标签的属性\n     */\n    static class CustomAttributeProvider implements AttributeProvider {\n        @Override\n        public void setAttributes(Node node, String tagName, Map<String, String> attributes) {\n            //改变a标签的target属性为_blank\n            if (node instanceof Link) {\n                attributes.put(\"target\", \"_blank\");\n            }\n            if (node instanceof TableBlock) {\n                attributes.put(\"class\", \"ui celled table\");\n            }\n        }\n    }\n\n\n    public static void main(String[] args) {\n        String table = \"| hello | hi   | 哈哈哈   |\\n\" +\n                \"| ----- | ---- | ----- |\\n\" +\n                \"| 斯维尔多  | 士大夫  | f啊    |\\n\" +\n                \"| 阿什顿发  | 非固定杆 | 撒阿什顿发 |\\n\" +\n                \"\\n\";\n        String a = \"[imCoding 爱编程](http://www.lirenmi.cn)\";\n        System.out.println(markdownToHtmlExtensions(table));\n    }\n}\n\n```\n","slug":"2019-3-11 21-Markdown","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd03000byfmy3ii6cwd9","content":"<p>maven 中导入依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--markdown 编辑的依赖--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atlassian.commonmark<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commonmark<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.10.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--添加 markdown 扩展--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atlassian.commonmark<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commonmark-ext-heading-anchor<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.10.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--添加 markdown 扩展--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atlassian.commonmark<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commonmark-ext-gfm-tables<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.10.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sixkery.util;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.Extension;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.ext.gfm.tables.TableBlock;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.ext.gfm.tables.TablesExtension;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.ext.heading.anchor.HeadingAnchorExtension;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.node.Link;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.node.Node;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.parser.Parser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.AttributeProvider;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.AttributeProviderContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.AttributeProviderFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.HtmlRenderer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * markdown格式转换成 HTML 格式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MarkdownUtils</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * markdown格式转换成HTML格式</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> markdown</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">markdownToHtml</span><span class=\"params\">(String markdown)</span> </span>&#123;</span><br><span class=\"line\">        Parser parser = Parser.builder().build();</span><br><span class=\"line\">        Node document = parser.parse(markdown);</span><br><span class=\"line\">        HtmlRenderer renderer = HtmlRenderer.builder().build();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> renderer.render(document);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加扩展[标题锚点，表格生成]</span></span><br><span class=\"line\"><span class=\"comment\">     * Markdown转换成HTML</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> markdown</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">markdownToHtmlExtensions</span><span class=\"params\">(String markdown)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//h 标题生成 id</span></span><br><span class=\"line\">        Set&lt;Extension&gt; headingAnchorExtensions = Collections.singleton(HeadingAnchorExtension.create());</span><br><span class=\"line\">        <span class=\"comment\">//转换table的HTML</span></span><br><span class=\"line\">        List&lt;Extension&gt; tableExtension = Arrays.asList(TablesExtension.create());</span><br><span class=\"line\">        Parser parser = Parser.builder()</span><br><span class=\"line\">                .extensions(tableExtension)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        Node document = parser.parse(markdown);</span><br><span class=\"line\">        HtmlRenderer renderer = HtmlRenderer.builder()</span><br><span class=\"line\">                .extensions(headingAnchorExtensions)</span><br><span class=\"line\">                .extensions(tableExtension)</span><br><span class=\"line\">                .attributeProviderFactory(<span class=\"keyword\">new</span> AttributeProviderFactory() &#123;</span><br><span class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> AttributeProvider <span class=\"title\">create</span><span class=\"params\">(AttributeProviderContext context)</span> </span>&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> CustomAttributeProvider();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> renderer.render(document);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理标签的属性</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomAttributeProvider</span> <span class=\"keyword\">implements</span> <span class=\"title\">AttributeProvider</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAttributes</span><span class=\"params\">(Node node, String tagName, Map&lt;String, String&gt; attributes)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//改变a标签的target属性为_blank</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (node <span class=\"keyword\">instanceof</span> Link) &#123;</span><br><span class=\"line\">                attributes.put(<span class=\"string\">\"target\"</span>, <span class=\"string\">\"_blank\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (node <span class=\"keyword\">instanceof</span> TableBlock) &#123;</span><br><span class=\"line\">                attributes.put(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"ui celled table\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String table = <span class=\"string\">\"| hello | hi   | 哈哈哈   |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"| ----- | ---- | ----- |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"| 斯维尔多  | 士大夫  | f啊    |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"| 阿什顿发  | 非固定杆 | 撒阿什顿发 |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">        String a = <span class=\"string\">\"[imCoding 爱编程](http://www.lirenmi.cn)\"</span>;</span><br><span class=\"line\">        System.out.println(markdownToHtmlExtensions(table));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>maven 中导入依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--markdown 编辑的依赖--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atlassian.commonmark<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commonmark<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.10.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--添加 markdown 扩展--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atlassian.commonmark<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commonmark-ext-heading-anchor<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.10.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--添加 markdown 扩展--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atlassian.commonmark<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commonmark-ext-gfm-tables<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.10.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sixkery.util;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.Extension;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.ext.gfm.tables.TableBlock;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.ext.gfm.tables.TablesExtension;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.ext.heading.anchor.HeadingAnchorExtension;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.node.Link;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.node.Node;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.parser.Parser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.AttributeProvider;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.AttributeProviderContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.AttributeProviderFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.commonmark.renderer.html.HtmlRenderer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * markdown格式转换成 HTML 格式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MarkdownUtils</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * markdown格式转换成HTML格式</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> markdown</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">markdownToHtml</span><span class=\"params\">(String markdown)</span> </span>&#123;</span><br><span class=\"line\">        Parser parser = Parser.builder().build();</span><br><span class=\"line\">        Node document = parser.parse(markdown);</span><br><span class=\"line\">        HtmlRenderer renderer = HtmlRenderer.builder().build();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> renderer.render(document);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加扩展[标题锚点，表格生成]</span></span><br><span class=\"line\"><span class=\"comment\">     * Markdown转换成HTML</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> markdown</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">markdownToHtmlExtensions</span><span class=\"params\">(String markdown)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//h 标题生成 id</span></span><br><span class=\"line\">        Set&lt;Extension&gt; headingAnchorExtensions = Collections.singleton(HeadingAnchorExtension.create());</span><br><span class=\"line\">        <span class=\"comment\">//转换table的HTML</span></span><br><span class=\"line\">        List&lt;Extension&gt; tableExtension = Arrays.asList(TablesExtension.create());</span><br><span class=\"line\">        Parser parser = Parser.builder()</span><br><span class=\"line\">                .extensions(tableExtension)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        Node document = parser.parse(markdown);</span><br><span class=\"line\">        HtmlRenderer renderer = HtmlRenderer.builder()</span><br><span class=\"line\">                .extensions(headingAnchorExtensions)</span><br><span class=\"line\">                .extensions(tableExtension)</span><br><span class=\"line\">                .attributeProviderFactory(<span class=\"keyword\">new</span> AttributeProviderFactory() &#123;</span><br><span class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> AttributeProvider <span class=\"title\">create</span><span class=\"params\">(AttributeProviderContext context)</span> </span>&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> CustomAttributeProvider();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> renderer.render(document);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理标签的属性</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomAttributeProvider</span> <span class=\"keyword\">implements</span> <span class=\"title\">AttributeProvider</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAttributes</span><span class=\"params\">(Node node, String tagName, Map&lt;String, String&gt; attributes)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//改变a标签的target属性为_blank</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (node <span class=\"keyword\">instanceof</span> Link) &#123;</span><br><span class=\"line\">                attributes.put(<span class=\"string\">\"target\"</span>, <span class=\"string\">\"_blank\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (node <span class=\"keyword\">instanceof</span> TableBlock) &#123;</span><br><span class=\"line\">                attributes.put(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"ui celled table\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String table = <span class=\"string\">\"| hello | hi   | 哈哈哈   |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"| ----- | ---- | ----- |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"| 斯维尔多  | 士大夫  | f啊    |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"| 阿什顿发  | 非固定杆 | 撒阿什顿发 |\\n\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">        String a = <span class=\"string\">\"[imCoding 爱编程](http://www.lirenmi.cn)\"</span>;</span><br><span class=\"line\">        System.out.println(markdownToHtmlExtensions(table));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"后台页面状态展示","date":"2019-05-20T13:15:06.000Z","description":"好用的枚举","_content":"遇到一个业务场景是这样的，在后台系统的页面上展示订单状态和支付状态。这里的订单状态分为新订单、完结订单和取消订单。支付状态分为等待支付和支付成功。\n![页面](../images/1574337996440.png)\n通常的做法是在后台写 if 语句进行判断展示。但是如果业务量变得庞大，有许多的枚举进行判断。那我们不要写死 <i class=\"fas fa-hiking\"></i>。\n这里给出一种相对完美的解决方案。\n首先看我们的枚举。\n订单状态\n```java\n@Getter // 这里使用了 lombok\npublic enum OrderStatusEnum {\n    NEW(0,\"新订单\"),\n    FINISHED(1,\"完结\"),\n    CANCEL(2,\"已取消\")\n    ;\n    private Integer code;\n    private String message;\n\n    OrderStatusEnum(Integer code, String message) {\n        this.code = code;\n        this.message = message;\n    }\n}\n```\n支付状态\n```java\n@Getter\npublic enum PayStatusEnum {\n    WAIT(0,\"等待支付\"),\n    SUCCESS(1,\"支付成功\"),\n    ;\n    private Integer code;\n    private String message;\n\n    PayStatusEnum(Integer code, String message) {\n        this.code = code;\n        this.message = message;\n    }\n}\n```\n#### 升级步骤一\n在 OrderDTO 数据传输对象中，添加两个方法\n```java\n    @JsonIgnore // 对象转成 json 忽略这个方法\n    public OrderStatusEnum getOrderStatusEnum() {\n        return EnumUtil.getByCode(orderStatus, OrderStatusEnum.class);\n    }\n\n    @JsonIgnore\n    public PayStatusEnum getPayStatusEnum() {\n        return EnumUtil.getByCode(payStatus, PayStatusEnum.class);\n    }\n```\n写一个公共的接口，让 OrderStatusEnum 和 PayStatusEnum 实现这个接口\n```java\npublic interface CodeEnum {\n    /**\n     * 获取 code\n     * @return\n     */\n    Integer getCode();\n}\n```\n写一个EnumUtil 用来获取 code\n```java\n/**\n * @author sixkery\n * @date 2018/4/21\n */\npublic class EnumUtil {\n    public static <T extends CodeEnum> T getByCode(Integer code, Class<T> enumClass) {\n        for (T each : enumClass.getEnumConstants()) {\n            if (code.equals(each.getCode())) {\n                return each;\n            }\n        }\n        return null;\n    }\n}\n\n```\n\n","source":"_posts/2019-5-20-enum.md","raw":"---\nlayout: post\ntitle: \"后台页面状态展示\"\ndate: 2019-5-20 21:15:06 \ndescription: \"好用的枚举\"\ntag: SpringBoot\n---\n遇到一个业务场景是这样的，在后台系统的页面上展示订单状态和支付状态。这里的订单状态分为新订单、完结订单和取消订单。支付状态分为等待支付和支付成功。\n![页面](../images/1574337996440.png)\n通常的做法是在后台写 if 语句进行判断展示。但是如果业务量变得庞大，有许多的枚举进行判断。那我们不要写死 <i class=\"fas fa-hiking\"></i>。\n这里给出一种相对完美的解决方案。\n首先看我们的枚举。\n订单状态\n```java\n@Getter // 这里使用了 lombok\npublic enum OrderStatusEnum {\n    NEW(0,\"新订单\"),\n    FINISHED(1,\"完结\"),\n    CANCEL(2,\"已取消\")\n    ;\n    private Integer code;\n    private String message;\n\n    OrderStatusEnum(Integer code, String message) {\n        this.code = code;\n        this.message = message;\n    }\n}\n```\n支付状态\n```java\n@Getter\npublic enum PayStatusEnum {\n    WAIT(0,\"等待支付\"),\n    SUCCESS(1,\"支付成功\"),\n    ;\n    private Integer code;\n    private String message;\n\n    PayStatusEnum(Integer code, String message) {\n        this.code = code;\n        this.message = message;\n    }\n}\n```\n#### 升级步骤一\n在 OrderDTO 数据传输对象中，添加两个方法\n```java\n    @JsonIgnore // 对象转成 json 忽略这个方法\n    public OrderStatusEnum getOrderStatusEnum() {\n        return EnumUtil.getByCode(orderStatus, OrderStatusEnum.class);\n    }\n\n    @JsonIgnore\n    public PayStatusEnum getPayStatusEnum() {\n        return EnumUtil.getByCode(payStatus, PayStatusEnum.class);\n    }\n```\n写一个公共的接口，让 OrderStatusEnum 和 PayStatusEnum 实现这个接口\n```java\npublic interface CodeEnum {\n    /**\n     * 获取 code\n     * @return\n     */\n    Integer getCode();\n}\n```\n写一个EnumUtil 用来获取 code\n```java\n/**\n * @author sixkery\n * @date 2018/4/21\n */\npublic class EnumUtil {\n    public static <T extends CodeEnum> T getByCode(Integer code, Class<T> enumClass) {\n        for (T each : enumClass.getEnumConstants()) {\n            if (code.equals(each.getCode())) {\n                return each;\n            }\n        }\n        return null;\n    }\n}\n\n```\n\n","slug":"2019-5-20-enum","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd04000dyfmy8gye0d1b","content":"<p>遇到一个业务场景是这样的，在后台系统的页面上展示订单状态和支付状态。这里的订单状态分为新订单、完结订单和取消订单。支付状态分为等待支付和支付成功。<br><img src=\"../images/1574337996440.png\" alt=\"页面\"><br>通常的做法是在后台写 if 语句进行判断展示。但是如果业务量变得庞大，有许多的枚举进行判断。那我们不要写死 <i class=\"fas fa-hiking\"></i>。<br>这里给出一种相对完美的解决方案。<br>首先看我们的枚举。<br>订单状态</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span> <span class=\"comment\">// 这里使用了 lombok</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> OrderStatusEnum &#123;</span><br><span class=\"line\">    NEW(<span class=\"number\">0</span>,<span class=\"string\">\"新订单\"</span>),</span><br><span class=\"line\">    FINISHED(<span class=\"number\">1</span>,<span class=\"string\">\"完结\"</span>),</span><br><span class=\"line\">    CANCEL(<span class=\"number\">2</span>,<span class=\"string\">\"已取消\"</span>)</span><br><span class=\"line\">    ;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\"></span><br><span class=\"line\">    OrderStatusEnum(Integer code, String message) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>支付状态</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> PayStatusEnum &#123;</span><br><span class=\"line\">    WAIT(<span class=\"number\">0</span>,<span class=\"string\">\"等待支付\"</span>),</span><br><span class=\"line\">    SUCCESS(<span class=\"number\">1</span>,<span class=\"string\">\"支付成功\"</span>),</span><br><span class=\"line\">    ;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\"></span><br><span class=\"line\">    PayStatusEnum(Integer code, String message) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"升级步骤一\"><a href=\"#升级步骤一\" class=\"headerlink\" title=\"升级步骤一\"></a>升级步骤一</h4><p>在 OrderDTO 数据传输对象中，添加两个方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JsonIgnore</span> <span class=\"comment\">// 对象转成 json 忽略这个方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> OrderStatusEnum <span class=\"title\">getOrderStatusEnum</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> EnumUtil.getByCode(orderStatus, OrderStatusEnum<span class=\"class\">.<span class=\"keyword\">class</span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> PayStatusEnum <span class=\"title\">getPayStatusEnum</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> EnumUtil.getByCode(payStatus, PayStatusEnum<span class=\"class\">.<span class=\"keyword\">class</span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写一个公共的接口，让 OrderStatusEnum 和 PayStatusEnum 实现这个接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CodeEnum</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取 code</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">Integer <span class=\"title\">getCode</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写一个EnumUtil 用来获取 code</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2018/4/21</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EnumUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T extends CodeEnum&gt; <span class=\"function\">T <span class=\"title\">getByCode</span><span class=\"params\">(Integer code, Class&lt;T&gt; enumClass)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (T each : enumClass.getEnumConstants()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (code.equals(each.getCode())) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> each;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>遇到一个业务场景是这样的，在后台系统的页面上展示订单状态和支付状态。这里的订单状态分为新订单、完结订单和取消订单。支付状态分为等待支付和支付成功。<br><img src=\"../images/1574337996440.png\" alt=\"页面\"><br>通常的做法是在后台写 if 语句进行判断展示。但是如果业务量变得庞大，有许多的枚举进行判断。那我们不要写死 <i class=\"fas fa-hiking\"></i>。<br>这里给出一种相对完美的解决方案。<br>首先看我们的枚举。<br>订单状态</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span> <span class=\"comment\">// 这里使用了 lombok</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> OrderStatusEnum &#123;</span><br><span class=\"line\">    NEW(<span class=\"number\">0</span>,<span class=\"string\">\"新订单\"</span>),</span><br><span class=\"line\">    FINISHED(<span class=\"number\">1</span>,<span class=\"string\">\"完结\"</span>),</span><br><span class=\"line\">    CANCEL(<span class=\"number\">2</span>,<span class=\"string\">\"已取消\"</span>)</span><br><span class=\"line\">    ;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\"></span><br><span class=\"line\">    OrderStatusEnum(Integer code, String message) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>支付状态</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> PayStatusEnum &#123;</span><br><span class=\"line\">    WAIT(<span class=\"number\">0</span>,<span class=\"string\">\"等待支付\"</span>),</span><br><span class=\"line\">    SUCCESS(<span class=\"number\">1</span>,<span class=\"string\">\"支付成功\"</span>),</span><br><span class=\"line\">    ;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\"></span><br><span class=\"line\">    PayStatusEnum(Integer code, String message) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"升级步骤一\"><a href=\"#升级步骤一\" class=\"headerlink\" title=\"升级步骤一\"></a>升级步骤一</h4><p>在 OrderDTO 数据传输对象中，添加两个方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JsonIgnore</span> <span class=\"comment\">// 对象转成 json 忽略这个方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> OrderStatusEnum <span class=\"title\">getOrderStatusEnum</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> EnumUtil.getByCode(orderStatus, OrderStatusEnum<span class=\"class\">.<span class=\"keyword\">class</span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> PayStatusEnum <span class=\"title\">getPayStatusEnum</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> EnumUtil.getByCode(payStatus, PayStatusEnum<span class=\"class\">.<span class=\"keyword\">class</span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写一个公共的接口，让 OrderStatusEnum 和 PayStatusEnum 实现这个接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CodeEnum</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取 code</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">Integer <span class=\"title\">getCode</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写一个EnumUtil 用来获取 code</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2018/4/21</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EnumUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T extends CodeEnum&gt; <span class=\"function\">T <span class=\"title\">getByCode</span><span class=\"params\">(Integer code, Class&lt;T&gt; enumClass)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (T each : enumClass.getEnumConstants()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (code.equals(each.getCode())) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> each;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"工具类","date":"2019-03-11T13:15:06.000Z","description":"Java","_content":"\n\n### Cookie 工具类\n获取 cookie 和设置 cookie\n\n```java\n/**\n* cookie 工具类,获取 cookie 和设置 cookie\n*\n* @author sixkery\n* @date 2019/5/28\n*/\npublic class CookieUtil {\n    /**\n     * 设置cookie\n     *\n     * @param response response 对象\n     * @param name     cookie 名字\n     * @param value    cookie 值\n     * @param maxAge   过期时间\n     */\n    public static void set(HttpServletResponse response, String name, String value, int maxAge) {\n        Cookie cookie = new Cookie(name, value);\n        cookie.setMaxAge(maxAge);\n        cookie.setPath(\"/\");\n        response.addCookie(cookie);\n    }\n\n\n    /**\n     * 获取 cookie\n     *\n     * @param request request 对象\n     * @param name    cookie的名字\n     * @return cookie\n     */\n    public static Cookie get(HttpServletRequest request, String name) {\n        Map<String, Cookie> cookieMap = readCookieMap(request);\n        if (cookieMap.containsKey(name)) {\n            return cookieMap.get(name);\n        } else {\n            return null;\n        }\n    }\n\n\n    /**\n     * 将 cookies 数组转换成 Map\n     *\n     * @param request request 对象\n     * @return 封装成的 cookieMap\n     */\n    private static Map<String, Cookie> readCookieMap(HttpServletRequest request) {\n        HashMap<String, Cookie> cookieMap = new HashMap<>();\n        Cookie[] cookies = request.getCookies();\n        if (cookies != null) {\n            for (Cookie cookie : cookies) {\n                cookieMap.put(cookie.getName(), cookie);\n            }\n        }\n\n\n        return cookieMap;\n    }\n}\n```","source":"_posts/2019-3-11-tool.md","raw":"---\nlayout: post\ntitle: \"工具类\"\ndate: 2019-3-11 21:15:06 \ndescription: \"Java\"\ntag: Java\n---\n\n\n### Cookie 工具类\n获取 cookie 和设置 cookie\n\n```java\n/**\n* cookie 工具类,获取 cookie 和设置 cookie\n*\n* @author sixkery\n* @date 2019/5/28\n*/\npublic class CookieUtil {\n    /**\n     * 设置cookie\n     *\n     * @param response response 对象\n     * @param name     cookie 名字\n     * @param value    cookie 值\n     * @param maxAge   过期时间\n     */\n    public static void set(HttpServletResponse response, String name, String value, int maxAge) {\n        Cookie cookie = new Cookie(name, value);\n        cookie.setMaxAge(maxAge);\n        cookie.setPath(\"/\");\n        response.addCookie(cookie);\n    }\n\n\n    /**\n     * 获取 cookie\n     *\n     * @param request request 对象\n     * @param name    cookie的名字\n     * @return cookie\n     */\n    public static Cookie get(HttpServletRequest request, String name) {\n        Map<String, Cookie> cookieMap = readCookieMap(request);\n        if (cookieMap.containsKey(name)) {\n            return cookieMap.get(name);\n        } else {\n            return null;\n        }\n    }\n\n\n    /**\n     * 将 cookies 数组转换成 Map\n     *\n     * @param request request 对象\n     * @return 封装成的 cookieMap\n     */\n    private static Map<String, Cookie> readCookieMap(HttpServletRequest request) {\n        HashMap<String, Cookie> cookieMap = new HashMap<>();\n        Cookie[] cookies = request.getCookies();\n        if (cookies != null) {\n            for (Cookie cookie : cookies) {\n                cookieMap.put(cookie.getName(), cookie);\n            }\n        }\n\n\n        return cookieMap;\n    }\n}\n```","slug":"2019-3-11-tool","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd07000gyfmyb4005uh1","content":"<h3 id=\"Cookie-工具类\"><a href=\"#Cookie-工具类\" class=\"headerlink\" title=\"Cookie 工具类\"></a>Cookie 工具类</h3><p>获取 cookie 和设置 cookie</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* cookie 工具类,获取 cookie 和设置 cookie</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@date</span> 2019/5/28</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CookieUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置cookie</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response response 对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> name     cookie 名字</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value    cookie 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> maxAge   过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(HttpServletResponse response, String name, String value, <span class=\"keyword\">int</span> maxAge)</span> </span>&#123;</span><br><span class=\"line\">        Cookie cookie = <span class=\"keyword\">new</span> Cookie(name, value);</span><br><span class=\"line\">        cookie.setMaxAge(maxAge);</span><br><span class=\"line\">        cookie.setPath(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">        response.addCookie(cookie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取 cookie</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request request 对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> name    cookie的名字</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> cookie</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Cookie <span class=\"title\">get</span><span class=\"params\">(HttpServletRequest request, String name)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;String, Cookie&gt; cookieMap = readCookieMap(request);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cookieMap.containsKey(name)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cookieMap.get(name);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将 cookies 数组转换成 Map</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request request 对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 封装成的 cookieMap</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;String, Cookie&gt; <span class=\"title\">readCookieMap</span><span class=\"params\">(HttpServletRequest request)</span> </span>&#123;</span><br><span class=\"line\">        HashMap&lt;String, Cookie&gt; cookieMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        Cookie[] cookies = request.getCookies();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cookies != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Cookie cookie : cookies) &#123;</span><br><span class=\"line\">                cookieMap.put(cookie.getName(), cookie);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> cookieMap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Cookie-工具类\"><a href=\"#Cookie-工具类\" class=\"headerlink\" title=\"Cookie 工具类\"></a>Cookie 工具类</h3><p>获取 cookie 和设置 cookie</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* cookie 工具类,获取 cookie 和设置 cookie</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@date</span> 2019/5/28</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CookieUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置cookie</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response response 对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> name     cookie 名字</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value    cookie 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> maxAge   过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(HttpServletResponse response, String name, String value, <span class=\"keyword\">int</span> maxAge)</span> </span>&#123;</span><br><span class=\"line\">        Cookie cookie = <span class=\"keyword\">new</span> Cookie(name, value);</span><br><span class=\"line\">        cookie.setMaxAge(maxAge);</span><br><span class=\"line\">        cookie.setPath(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">        response.addCookie(cookie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取 cookie</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request request 对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> name    cookie的名字</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> cookie</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Cookie <span class=\"title\">get</span><span class=\"params\">(HttpServletRequest request, String name)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;String, Cookie&gt; cookieMap = readCookieMap(request);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cookieMap.containsKey(name)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cookieMap.get(name);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将 cookies 数组转换成 Map</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request request 对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 封装成的 cookieMap</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;String, Cookie&gt; <span class=\"title\">readCookieMap</span><span class=\"params\">(HttpServletRequest request)</span> </span>&#123;</span><br><span class=\"line\">        HashMap&lt;String, Cookie&gt; cookieMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        Cookie[] cookies = request.getCookies();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cookies != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Cookie cookie : cookies) &#123;</span><br><span class=\"line\">                cookieMap.put(cookie.getName(), cookie);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> cookieMap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"缓存的使用","date":"2019-05-21T13:15:06.000Z","description":"redis","_content":"\nSpringBoot 2.x 使用 Redis 缓存，存储到 Redis 会出现乱码。是因为默认情况下采用 jdk 的序列化的方式。\n这里修改序列化的方式。\n需要在 maven 中引入 fastjson 坐标。\n自定义序列化类\n```java\n/**\n * @author sixkery\n * @date 2019/5/11\n */\npublic class FastJsonRedisSerializer<T> implements RedisSerializer<T> {\n    /**\n     * 仅仅用作识别JSON.parseObject(text,class)方法\n     */\n    private Class<T> clazz = null;\n\n    private static final SerializerFeature[] SERIALIZER_FEATURES = new SerializerFeature[]{\n            SerializerFeature.PrettyFormat\n            , SerializerFeature.SkipTransientField\n//            , SerializerFeature.WriteEnumUsingName\n//            , SerializerFeature.WriteDateUseDateFormat\n            , SerializerFeature.WriteNullStringAsEmpty\n            , SerializerFeature.WriteNullListAsEmpty\n            , SerializerFeature.WriteMapNullValue\n            // 【重点】序列化的时候必须需要带上Class类型，否则反序列化的时候无法知道Class类型\n            , SerializerFeature.WriteClassName\n    };\n\n    /**\n     * 序列化\n     *\n     * @param t 数据\n     * @return 序列化的数据\n     * @throws SerializationException 异常\n     */\n    @Override\n    public byte[] serialize(T t) throws SerializationException {\n        return t == null ? null : JSON.toJSONString(t, SERIALIZER_FEATURES).getBytes(StandardCharsets.UTF_8);\n    }\n\n    /**\n     * 反序列化\n     * clazz为 null 也可以反序列化成功是因为对象在序列化的时候保存了对象的 class\n     *\n     * @param bytes 字节数组\n     * @return 数据\n     * @throws SerializationException 异常\n     */\n    @Override\n    public T deserialize(byte[] bytes) throws SerializationException {\n        return bytes == null ? null : JSON.parseObject(new String(bytes, StandardCharsets.UTF_8), clazz);\n    }\n}\n\n```\n定义RedisTemplate<String,T>Bean\n```java\n**\n * @author sixkery\n * @date 2019/5/11\n */\n@Configuration\npublic class RedisConfig {\n\n\n    /**\n     * 自定义序列化\n     * 这里的FastJsonRedisSerializer引用的自己定义的\n     */\n    @Primary\n    @Bean\n    public <T> RedisTemplate<String, T> redisTemplate(RedisConnectionFactory factory) {\n        //redis反序列化 开启fastJson反序列化的autoType\n        ParserConfig.getGlobalInstance().setAutoTypeSupport(true);\n        RedisTemplate<String, T> redisTemplate = new RedisTemplate<>();\n        redisTemplate.setConnectionFactory(factory);\n        FastJsonRedisSerializer fastJsonRedisSerializer = new FastJsonRedisSerializer<T>();\n        StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();\n        redisTemplate.setDefaultSerializer(fastJsonRedisSerializer);\n        redisTemplate.setKeySerializer(stringRedisSerializer);\n        redisTemplate.setHashKeySerializer(stringRedisSerializer);\n        redisTemplate.setValueSerializer(fastJsonRedisSerializer);\n        redisTemplate.setHashValueSerializer(fastJsonRedisSerializer);\n        return redisTemplate;\n    }\n\n}\n\n```\n使用 \n```java\n    @Autowired\n    private RedisTemplate<String, User> redisTemplate;\n```\n\nSpringBoot 中缓存的原理\n注解\n\n@Cacheable\n将方法的运行结果进行缓存；以后再要相同的数据，直接从缓存中获取，不用调用方法；\nCacheManager管理多个Cache组件的，对缓存的真正CRUD操作在Cache组件中，每一个缓存组件有自己唯一一个名字；\n\n 原理：\n1. 自动配置类；CacheAutoConfiguration\n2. 缓存的配置类\norg.springframework.boot.autoconfigure.cache.GenericCacheConfiguration\norg.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration\norg.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration\norg.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration\norg.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration\norg.springframework.boot.autoconfigure.cache.RedisCacheConfiguration\norg.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration\norg.springframework.boot.autoconfigure.cache.GuavaCacheConfiguration\n org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration【默认】\norg.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration\n3. 哪个配置类默认生效：SimpleCacheConfiguration；\n4. 给容器中注册了一个CacheManager：ConcurrentMapCacheManager\n5. 可以获取和创建ConcurrentMapCache类型的缓存组件；他的作用将数据保存在ConcurrentMap中；\n\n运行流程：\n@Cacheable：\n1. 方法运行之前，先去查询Cache（缓存组件），按照cacheNames指定的名字获取；\n（CacheManager先获取相应的缓存），第一次获取缓存如果没有Cache组件会自动创建。\n 2. 去Cache中查找缓存的内容，使用一个key，默认就是方法的参数；\nkey是按照某种策略生成的；默认是使用keyGenerator生成的，默认使用SimpleKeyGenerator生成key；\nSimpleKeyGenerator生成key的默认策略；\n如果没有参数；key=new SimpleKey()；\n如果有一个参数：key=参数的值\n如果有多个参数：key=new SimpleKey(params)；\n3. 没有查到缓存就调用目标方法；\n4. 将目标方法返回的结果，放进缓存中\n@Cacheable标注的方法执行之前先来检查缓存中有没有这个数据，默认按照参数的值作为key去查询缓存，\n如果没有就运行方法并将结果放入缓存；以后再来调用就可以直接使用缓存中的数据；\n\n核心：\n  1）、使用CacheManager【ConcurrentMapCacheManager】按照名字得到Cache【ConcurrentMapCache】组件\n  2）、key使用keyGenerator生成的，默认是SimpleKeyGenerator\n\n  几个属性：\ncacheNames/value：指定缓存组件的名字;将方法的返回结果放在哪个缓存中，是数组的方式，可以指定多个缓存；\nkey：缓存数据使用的key；可以用它来指定。默认是使用方法参数的值  1-方法的返回值\n编写SpEL； #i d;参数id的值   #a0  #p0  #root.args[0]  getEmp[2]\n    \n keyGenerator：key的生成器；可以自己指定key的生成器的组件id\n                  key/keyGenerator：二选一使用;\n          cacheManager：指定缓存管理器；或者cacheResolver指定获取解析器\n         condition：指定符合条件的情况下才缓存；\n                  ,condition = \"#id>0\"\n         condition = \"#a0>1\"：第一个参数的值》1的时候才进行缓存\nunless:否定缓存；当unless指定的条件为true，方法的返回值就不会被缓存；可以获取到结果进行判断\n             unless = \"#result == null\"\n            unless = \"#a0==2\":如果第一个参数的值是2，结果不缓存；\n     sync：是否使用异步模式\n```java\n@Cacheable(value = {\"emp\"}/*,keyGenerator = \"myKeyGenerator\",condition = \"#a0>1\",unless = \"#a0==2\"*/)\n    public Employee getEmp(Integer id){\n        System.out.println(\"查询\"+id+\"号员工\");\n        Employee emp = employeeMapper.getEmpById(id);\n        return emp;\n    }\n```","source":"_posts/2019-5-21-cache.md","raw":"---\nlayout: post\ntitle: \"缓存的使用\"\ndate: 2019-5-21 21:15:06 \ndescription: \"redis\"\ntag: 缓存\n---\n\nSpringBoot 2.x 使用 Redis 缓存，存储到 Redis 会出现乱码。是因为默认情况下采用 jdk 的序列化的方式。\n这里修改序列化的方式。\n需要在 maven 中引入 fastjson 坐标。\n自定义序列化类\n```java\n/**\n * @author sixkery\n * @date 2019/5/11\n */\npublic class FastJsonRedisSerializer<T> implements RedisSerializer<T> {\n    /**\n     * 仅仅用作识别JSON.parseObject(text,class)方法\n     */\n    private Class<T> clazz = null;\n\n    private static final SerializerFeature[] SERIALIZER_FEATURES = new SerializerFeature[]{\n            SerializerFeature.PrettyFormat\n            , SerializerFeature.SkipTransientField\n//            , SerializerFeature.WriteEnumUsingName\n//            , SerializerFeature.WriteDateUseDateFormat\n            , SerializerFeature.WriteNullStringAsEmpty\n            , SerializerFeature.WriteNullListAsEmpty\n            , SerializerFeature.WriteMapNullValue\n            // 【重点】序列化的时候必须需要带上Class类型，否则反序列化的时候无法知道Class类型\n            , SerializerFeature.WriteClassName\n    };\n\n    /**\n     * 序列化\n     *\n     * @param t 数据\n     * @return 序列化的数据\n     * @throws SerializationException 异常\n     */\n    @Override\n    public byte[] serialize(T t) throws SerializationException {\n        return t == null ? null : JSON.toJSONString(t, SERIALIZER_FEATURES).getBytes(StandardCharsets.UTF_8);\n    }\n\n    /**\n     * 反序列化\n     * clazz为 null 也可以反序列化成功是因为对象在序列化的时候保存了对象的 class\n     *\n     * @param bytes 字节数组\n     * @return 数据\n     * @throws SerializationException 异常\n     */\n    @Override\n    public T deserialize(byte[] bytes) throws SerializationException {\n        return bytes == null ? null : JSON.parseObject(new String(bytes, StandardCharsets.UTF_8), clazz);\n    }\n}\n\n```\n定义RedisTemplate<String,T>Bean\n```java\n**\n * @author sixkery\n * @date 2019/5/11\n */\n@Configuration\npublic class RedisConfig {\n\n\n    /**\n     * 自定义序列化\n     * 这里的FastJsonRedisSerializer引用的自己定义的\n     */\n    @Primary\n    @Bean\n    public <T> RedisTemplate<String, T> redisTemplate(RedisConnectionFactory factory) {\n        //redis反序列化 开启fastJson反序列化的autoType\n        ParserConfig.getGlobalInstance().setAutoTypeSupport(true);\n        RedisTemplate<String, T> redisTemplate = new RedisTemplate<>();\n        redisTemplate.setConnectionFactory(factory);\n        FastJsonRedisSerializer fastJsonRedisSerializer = new FastJsonRedisSerializer<T>();\n        StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();\n        redisTemplate.setDefaultSerializer(fastJsonRedisSerializer);\n        redisTemplate.setKeySerializer(stringRedisSerializer);\n        redisTemplate.setHashKeySerializer(stringRedisSerializer);\n        redisTemplate.setValueSerializer(fastJsonRedisSerializer);\n        redisTemplate.setHashValueSerializer(fastJsonRedisSerializer);\n        return redisTemplate;\n    }\n\n}\n\n```\n使用 \n```java\n    @Autowired\n    private RedisTemplate<String, User> redisTemplate;\n```\n\nSpringBoot 中缓存的原理\n注解\n\n@Cacheable\n将方法的运行结果进行缓存；以后再要相同的数据，直接从缓存中获取，不用调用方法；\nCacheManager管理多个Cache组件的，对缓存的真正CRUD操作在Cache组件中，每一个缓存组件有自己唯一一个名字；\n\n 原理：\n1. 自动配置类；CacheAutoConfiguration\n2. 缓存的配置类\norg.springframework.boot.autoconfigure.cache.GenericCacheConfiguration\norg.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration\norg.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration\norg.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration\norg.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration\norg.springframework.boot.autoconfigure.cache.RedisCacheConfiguration\norg.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration\norg.springframework.boot.autoconfigure.cache.GuavaCacheConfiguration\n org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration【默认】\norg.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration\n3. 哪个配置类默认生效：SimpleCacheConfiguration；\n4. 给容器中注册了一个CacheManager：ConcurrentMapCacheManager\n5. 可以获取和创建ConcurrentMapCache类型的缓存组件；他的作用将数据保存在ConcurrentMap中；\n\n运行流程：\n@Cacheable：\n1. 方法运行之前，先去查询Cache（缓存组件），按照cacheNames指定的名字获取；\n（CacheManager先获取相应的缓存），第一次获取缓存如果没有Cache组件会自动创建。\n 2. 去Cache中查找缓存的内容，使用一个key，默认就是方法的参数；\nkey是按照某种策略生成的；默认是使用keyGenerator生成的，默认使用SimpleKeyGenerator生成key；\nSimpleKeyGenerator生成key的默认策略；\n如果没有参数；key=new SimpleKey()；\n如果有一个参数：key=参数的值\n如果有多个参数：key=new SimpleKey(params)；\n3. 没有查到缓存就调用目标方法；\n4. 将目标方法返回的结果，放进缓存中\n@Cacheable标注的方法执行之前先来检查缓存中有没有这个数据，默认按照参数的值作为key去查询缓存，\n如果没有就运行方法并将结果放入缓存；以后再来调用就可以直接使用缓存中的数据；\n\n核心：\n  1）、使用CacheManager【ConcurrentMapCacheManager】按照名字得到Cache【ConcurrentMapCache】组件\n  2）、key使用keyGenerator生成的，默认是SimpleKeyGenerator\n\n  几个属性：\ncacheNames/value：指定缓存组件的名字;将方法的返回结果放在哪个缓存中，是数组的方式，可以指定多个缓存；\nkey：缓存数据使用的key；可以用它来指定。默认是使用方法参数的值  1-方法的返回值\n编写SpEL； #i d;参数id的值   #a0  #p0  #root.args[0]  getEmp[2]\n    \n keyGenerator：key的生成器；可以自己指定key的生成器的组件id\n                  key/keyGenerator：二选一使用;\n          cacheManager：指定缓存管理器；或者cacheResolver指定获取解析器\n         condition：指定符合条件的情况下才缓存；\n                  ,condition = \"#id>0\"\n         condition = \"#a0>1\"：第一个参数的值》1的时候才进行缓存\nunless:否定缓存；当unless指定的条件为true，方法的返回值就不会被缓存；可以获取到结果进行判断\n             unless = \"#result == null\"\n            unless = \"#a0==2\":如果第一个参数的值是2，结果不缓存；\n     sync：是否使用异步模式\n```java\n@Cacheable(value = {\"emp\"}/*,keyGenerator = \"myKeyGenerator\",condition = \"#a0>1\",unless = \"#a0==2\"*/)\n    public Employee getEmp(Integer id){\n        System.out.println(\"查询\"+id+\"号员工\");\n        Employee emp = employeeMapper.getEmpById(id);\n        return emp;\n    }\n```","slug":"2019-5-21-cache","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd09000iyfmy92jw6pkx","content":"<p>SpringBoot 2.x 使用 Redis 缓存，存储到 Redis 会出现乱码。是因为默认情况下采用 jdk 的序列化的方式。<br>这里修改序列化的方式。<br>需要在 maven 中引入 fastjson 坐标。<br>自定义序列化类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FastJsonRedisSerializer</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">RedisSerializer</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 仅仅用作识别JSON.parseObject(text,class)方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Class&lt;T&gt; clazz = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> SerializerFeature[] SERIALIZER_FEATURES = <span class=\"keyword\">new</span> SerializerFeature[]&#123;</span><br><span class=\"line\">            SerializerFeature.PrettyFormat</span><br><span class=\"line\">            , SerializerFeature.SkipTransientField</span><br><span class=\"line\"><span class=\"comment\">//            , SerializerFeature.WriteEnumUsingName</span></span><br><span class=\"line\"><span class=\"comment\">//            , SerializerFeature.WriteDateUseDateFormat</span></span><br><span class=\"line\">            , SerializerFeature.WriteNullStringAsEmpty</span><br><span class=\"line\">            , SerializerFeature.WriteNullListAsEmpty</span><br><span class=\"line\">            , SerializerFeature.WriteMapNullValue</span><br><span class=\"line\">            <span class=\"comment\">// 【重点】序列化的时候必须需要带上Class类型，否则反序列化的时候无法知道Class类型</span></span><br><span class=\"line\">            , SerializerFeature.WriteClassName</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 序列化</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> t 数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 序列化的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> SerializationException 异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] serialize(T t) <span class=\"keyword\">throws</span> SerializationException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> t == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : JSON.toJSONString(t, SERIALIZER_FEATURES).getBytes(StandardCharsets.UTF_8);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 反序列化</span></span><br><span class=\"line\"><span class=\"comment\">     * clazz为 null 也可以反序列化成功是因为对象在序列化的时候保存了对象的 class</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> bytes 字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> SerializationException 异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">deserialize</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span> <span class=\"keyword\">throws</span> SerializationException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bytes == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : JSON.parseObject(<span class=\"keyword\">new</span> String(bytes, StandardCharsets.UTF_8), clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>定义RedisTemplate&lt;String,T&gt;Bean</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**</span><br><span class=\"line\"> * <span class=\"meta\">@author</span> sixkery</span><br><span class=\"line\"> * <span class=\"meta\">@date</span> <span class=\"number\">2019</span>/<span class=\"number\">5</span>/<span class=\"number\">11</span></span><br><span class=\"line\"> */</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 自定义序列化</span></span><br><span class=\"line\"><span class=\"comment\">     * 这里的FastJsonRedisSerializer引用的自己定义的</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Primary</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">RedisTemplate&lt;String, T&gt; <span class=\"title\">redisTemplate</span><span class=\"params\">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//redis反序列化 开启fastJson反序列化的autoType</span></span><br><span class=\"line\">        ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        RedisTemplate&lt;String, T&gt; redisTemplate = <span class=\"keyword\">new</span> RedisTemplate&lt;&gt;();</span><br><span class=\"line\">        redisTemplate.setConnectionFactory(factory);</span><br><span class=\"line\">        FastJsonRedisSerializer fastJsonRedisSerializer = <span class=\"keyword\">new</span> FastJsonRedisSerializer&lt;T&gt;();</span><br><span class=\"line\">        StringRedisSerializer stringRedisSerializer = <span class=\"keyword\">new</span> StringRedisSerializer();</span><br><span class=\"line\">        redisTemplate.setDefaultSerializer(fastJsonRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setHashKeySerializer(stringRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setValueSerializer(fastJsonRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setHashValueSerializer(fastJsonRedisSerializer);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> RedisTemplate&lt;String, User&gt; redisTemplate;</span><br></pre></td></tr></table></figure>\n\n<p>SpringBoot 中缓存的原理<br>注解</p>\n<p>@Cacheable<br>将方法的运行结果进行缓存；以后再要相同的数据，直接从缓存中获取，不用调用方法；<br>CacheManager管理多个Cache组件的，对缓存的真正CRUD操作在Cache组件中，每一个缓存组件有自己唯一一个名字；</p>\n<p> 原理：</p>\n<ol>\n<li>自动配置类；CacheAutoConfiguration</li>\n<li>缓存的配置类<br>org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.GuavaCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration【默认】<br>org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration</li>\n<li>哪个配置类默认生效：SimpleCacheConfiguration；</li>\n<li>给容器中注册了一个CacheManager：ConcurrentMapCacheManager</li>\n<li>可以获取和创建ConcurrentMapCache类型的缓存组件；他的作用将数据保存在ConcurrentMap中；</li>\n</ol>\n<p>运行流程：<br>@Cacheable：</p>\n<ol>\n<li>方法运行之前，先去查询Cache（缓存组件），按照cacheNames指定的名字获取；<br>（CacheManager先获取相应的缓存），第一次获取缓存如果没有Cache组件会自动创建。<ol start=\"2\">\n<li>去Cache中查找缓存的内容，使用一个key，默认就是方法的参数；<br>key是按照某种策略生成的；默认是使用keyGenerator生成的，默认使用SimpleKeyGenerator生成key；<br>SimpleKeyGenerator生成key的默认策略；<br>如果没有参数；key=new SimpleKey()；<br>如果有一个参数：key=参数的值<br>如果有多个参数：key=new SimpleKey(params)；</li>\n</ol>\n</li>\n<li>没有查到缓存就调用目标方法；</li>\n<li>将目标方法返回的结果，放进缓存中<br>@Cacheable标注的方法执行之前先来检查缓存中有没有这个数据，默认按照参数的值作为key去查询缓存，<br>如果没有就运行方法并将结果放入缓存；以后再来调用就可以直接使用缓存中的数据；</li>\n</ol>\n<p>核心：<br>  1）、使用CacheManager【ConcurrentMapCacheManager】按照名字得到Cache【ConcurrentMapCache】组件<br>  2）、key使用keyGenerator生成的，默认是SimpleKeyGenerator</p>\n<p>  几个属性：<br>cacheNames/value：指定缓存组件的名字;将方法的返回结果放在哪个缓存中，是数组的方式，可以指定多个缓存；<br>key：缓存数据使用的key；可以用它来指定。默认是使用方法参数的值  1-方法的返回值<br>编写SpEL； #i d;参数id的值   #a0  #p0  #root.args[0]  getEmp[2]</p>\n<p> keyGenerator：key的生成器；可以自己指定key的生成器的组件id<br>                  key/keyGenerator：二选一使用;<br>          cacheManager：指定缓存管理器；或者cacheResolver指定获取解析器<br>         condition：指定符合条件的情况下才缓存；<br>                  ,condition = “#id&gt;0”<br>         condition = “#a0&gt;1”：第一个参数的值》1的时候才进行缓存<br>unless:否定缓存；当unless指定的条件为true，方法的返回值就不会被缓存；可以获取到结果进行判断<br>             unless = “#result == null”<br>            unless = “#a0==2”:如果第一个参数的值是2，结果不缓存；<br>     sync：是否使用异步模式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Cacheable</span>(value = &#123;<span class=\"string\">\"emp\"</span>&#125;<span class=\"comment\">/*,keyGenerator = \"myKeyGenerator\",condition = \"#a0&gt;1\",unless = \"#a0==2\"*/</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Employee <span class=\"title\">getEmp</span><span class=\"params\">(Integer id)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"查询\"</span>+id+<span class=\"string\">\"号员工\"</span>);</span><br><span class=\"line\">        Employee emp = employeeMapper.getEmpById(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> emp;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>SpringBoot 2.x 使用 Redis 缓存，存储到 Redis 会出现乱码。是因为默认情况下采用 jdk 的序列化的方式。<br>这里修改序列化的方式。<br>需要在 maven 中引入 fastjson 坐标。<br>自定义序列化类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sixkery</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FastJsonRedisSerializer</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">RedisSerializer</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 仅仅用作识别JSON.parseObject(text,class)方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Class&lt;T&gt; clazz = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> SerializerFeature[] SERIALIZER_FEATURES = <span class=\"keyword\">new</span> SerializerFeature[]&#123;</span><br><span class=\"line\">            SerializerFeature.PrettyFormat</span><br><span class=\"line\">            , SerializerFeature.SkipTransientField</span><br><span class=\"line\"><span class=\"comment\">//            , SerializerFeature.WriteEnumUsingName</span></span><br><span class=\"line\"><span class=\"comment\">//            , SerializerFeature.WriteDateUseDateFormat</span></span><br><span class=\"line\">            , SerializerFeature.WriteNullStringAsEmpty</span><br><span class=\"line\">            , SerializerFeature.WriteNullListAsEmpty</span><br><span class=\"line\">            , SerializerFeature.WriteMapNullValue</span><br><span class=\"line\">            <span class=\"comment\">// 【重点】序列化的时候必须需要带上Class类型，否则反序列化的时候无法知道Class类型</span></span><br><span class=\"line\">            , SerializerFeature.WriteClassName</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 序列化</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> t 数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 序列化的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> SerializationException 异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] serialize(T t) <span class=\"keyword\">throws</span> SerializationException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> t == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : JSON.toJSONString(t, SERIALIZER_FEATURES).getBytes(StandardCharsets.UTF_8);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 反序列化</span></span><br><span class=\"line\"><span class=\"comment\">     * clazz为 null 也可以反序列化成功是因为对象在序列化的时候保存了对象的 class</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> bytes 字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> SerializationException 异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">deserialize</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span> <span class=\"keyword\">throws</span> SerializationException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bytes == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : JSON.parseObject(<span class=\"keyword\">new</span> String(bytes, StandardCharsets.UTF_8), clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>定义RedisTemplate&lt;String,T&gt;Bean</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**</span><br><span class=\"line\"> * <span class=\"meta\">@author</span> sixkery</span><br><span class=\"line\"> * <span class=\"meta\">@date</span> <span class=\"number\">2019</span>/<span class=\"number\">5</span>/<span class=\"number\">11</span></span><br><span class=\"line\"> */</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 自定义序列化</span></span><br><span class=\"line\"><span class=\"comment\">     * 这里的FastJsonRedisSerializer引用的自己定义的</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Primary</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">RedisTemplate&lt;String, T&gt; <span class=\"title\">redisTemplate</span><span class=\"params\">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//redis反序列化 开启fastJson反序列化的autoType</span></span><br><span class=\"line\">        ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        RedisTemplate&lt;String, T&gt; redisTemplate = <span class=\"keyword\">new</span> RedisTemplate&lt;&gt;();</span><br><span class=\"line\">        redisTemplate.setConnectionFactory(factory);</span><br><span class=\"line\">        FastJsonRedisSerializer fastJsonRedisSerializer = <span class=\"keyword\">new</span> FastJsonRedisSerializer&lt;T&gt;();</span><br><span class=\"line\">        StringRedisSerializer stringRedisSerializer = <span class=\"keyword\">new</span> StringRedisSerializer();</span><br><span class=\"line\">        redisTemplate.setDefaultSerializer(fastJsonRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setHashKeySerializer(stringRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setValueSerializer(fastJsonRedisSerializer);</span><br><span class=\"line\">        redisTemplate.setHashValueSerializer(fastJsonRedisSerializer);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> RedisTemplate&lt;String, User&gt; redisTemplate;</span><br></pre></td></tr></table></figure>\n\n<p>SpringBoot 中缓存的原理<br>注解</p>\n<p>@Cacheable<br>将方法的运行结果进行缓存；以后再要相同的数据，直接从缓存中获取，不用调用方法；<br>CacheManager管理多个Cache组件的，对缓存的真正CRUD操作在Cache组件中，每一个缓存组件有自己唯一一个名字；</p>\n<p> 原理：</p>\n<ol>\n<li>自动配置类；CacheAutoConfiguration</li>\n<li>缓存的配置类<br>org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.GuavaCacheConfiguration<br>org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration【默认】<br>org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration</li>\n<li>哪个配置类默认生效：SimpleCacheConfiguration；</li>\n<li>给容器中注册了一个CacheManager：ConcurrentMapCacheManager</li>\n<li>可以获取和创建ConcurrentMapCache类型的缓存组件；他的作用将数据保存在ConcurrentMap中；</li>\n</ol>\n<p>运行流程：<br>@Cacheable：</p>\n<ol>\n<li>方法运行之前，先去查询Cache（缓存组件），按照cacheNames指定的名字获取；<br>（CacheManager先获取相应的缓存），第一次获取缓存如果没有Cache组件会自动创建。<ol start=\"2\">\n<li>去Cache中查找缓存的内容，使用一个key，默认就是方法的参数；<br>key是按照某种策略生成的；默认是使用keyGenerator生成的，默认使用SimpleKeyGenerator生成key；<br>SimpleKeyGenerator生成key的默认策略；<br>如果没有参数；key=new SimpleKey()；<br>如果有一个参数：key=参数的值<br>如果有多个参数：key=new SimpleKey(params)；</li>\n</ol>\n</li>\n<li>没有查到缓存就调用目标方法；</li>\n<li>将目标方法返回的结果，放进缓存中<br>@Cacheable标注的方法执行之前先来检查缓存中有没有这个数据，默认按照参数的值作为key去查询缓存，<br>如果没有就运行方法并将结果放入缓存；以后再来调用就可以直接使用缓存中的数据；</li>\n</ol>\n<p>核心：<br>  1）、使用CacheManager【ConcurrentMapCacheManager】按照名字得到Cache【ConcurrentMapCache】组件<br>  2）、key使用keyGenerator生成的，默认是SimpleKeyGenerator</p>\n<p>  几个属性：<br>cacheNames/value：指定缓存组件的名字;将方法的返回结果放在哪个缓存中，是数组的方式，可以指定多个缓存；<br>key：缓存数据使用的key；可以用它来指定。默认是使用方法参数的值  1-方法的返回值<br>编写SpEL； #i d;参数id的值   #a0  #p0  #root.args[0]  getEmp[2]</p>\n<p> keyGenerator：key的生成器；可以自己指定key的生成器的组件id<br>                  key/keyGenerator：二选一使用;<br>          cacheManager：指定缓存管理器；或者cacheResolver指定获取解析器<br>         condition：指定符合条件的情况下才缓存；<br>                  ,condition = “#id&gt;0”<br>         condition = “#a0&gt;1”：第一个参数的值》1的时候才进行缓存<br>unless:否定缓存；当unless指定的条件为true，方法的返回值就不会被缓存；可以获取到结果进行判断<br>             unless = “#result == null”<br>            unless = “#a0==2”:如果第一个参数的值是2，结果不缓存；<br>     sync：是否使用异步模式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Cacheable</span>(value = &#123;<span class=\"string\">\"emp\"</span>&#125;<span class=\"comment\">/*,keyGenerator = \"myKeyGenerator\",condition = \"#a0&gt;1\",unless = \"#a0==2\"*/</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Employee <span class=\"title\">getEmp</span><span class=\"params\">(Integer id)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"查询\"</span>+id+<span class=\"string\">\"号员工\"</span>);</span><br><span class=\"line\">        Employee emp = employeeMapper.getEmpById(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> emp;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步","date":"2019-07-09T13:15:06.000Z","description":"分页插件的使用","_content":"\n### SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步\n需要提前安装好 ElasticSearch 。logstash 安装下文有具体说明。\n新建表 blog 必须有字段 id update_time，可参考项目中 entity 包下字段建表。\n项目地址 [SpringBoot 搭建博客检索系统](https://github.com/sixkery/blog_index)\n使用步骤\n1. download 本项目\n2. 修改 yml 文件中的数据库配置，es 配置。\n3. 配置 logstash ，见下文。\n4. 启动本项目，在本地 8081 端口访问项目，可以看到有两个按钮，分别是通过 MySQL 的模糊查询和 es 的检索耗时比较。\n\n### 配置 logstash\n使用 logstash 同步  mysql 中的数据。全量同步，增量更新\n这里使用虚拟机中的 centos 。\n前提，CentOS 中安装 ElasticSearch 。 \n第一步，下载 [logstash](https://www.elastic.co/cn/downloads/past-releases#logstash) \n第二步，把数据库连接的驱动 jar 包放到 logstash 的目录中。\n![enter description here](../images/1574645141708.png)\n第三步，在 config 文件夹中新建文件 `mysql.conf`，配置数据库，es 端口等输入输出规则\n```dsconfig\ninput{\n  jdbc{\n    # jdbc 驱动包位置\n    jdbc_driver_library => \"/home/es/logstash-6.2.4/mysql-connector-java-5.1.6.jar\"\n    # 要使用的驱动包类\n    jdbc_driver_class => \"com.mysql.jdbc.Driver\" \n    # mysql 数据库的连接信息\n    jdbc_connection_string => \"jdbc:mysql://localhost:3306/blog\"\n    # mysql 用户\n    jdbc_user => \"root\"\n    # 密码\n    jdbc_password => \"密码\"\n    # 定时任务，多久执行一次查询，默认一分钟，如果想要没有延迟，可以使用 schedule => \"* * * * *\"\n    schedule => \"* * * * *\"\n    # 清空上一次的 sql_last_value 记录\n    clean_run => true\n    # 要执行的语句\n    statement => \"select * from t_blog where update_time > :sql_last_value and update_time < NOW() order by update_time desc\"\n    }\n}\n\noutput {\n  elasticsearch {\n    # es host : port\n    hosts => [\"192.168.42.134:9200\"]\n    # 索引\n    index => \"blog\"\n    # _id\n    document_id => \"%{id}\"\n  }\n}\n\n```\n第四步，以配置文件的方式启动 logstash\n```shell\n[es@localhost bin]$ ./logstash -f ../config/mysql.conf \n```\n第五步，kibana 中查看是否同步成功\n```shell\n\nGET blog/_stats\n// 查看全部数据\nPOST blog/_search\n{\n}\n```\n\n","source":"_posts/2019-7-09-ElasticSearch.md","raw":"---\nlayout: post\ntitle: \"SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步\"\ndate: 2019-7-09 21:15:06 \ndescription: \"分页插件的使用\"\ntag: SpringBoot\n---\n\n### SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步\n需要提前安装好 ElasticSearch 。logstash 安装下文有具体说明。\n新建表 blog 必须有字段 id update_time，可参考项目中 entity 包下字段建表。\n项目地址 [SpringBoot 搭建博客检索系统](https://github.com/sixkery/blog_index)\n使用步骤\n1. download 本项目\n2. 修改 yml 文件中的数据库配置，es 配置。\n3. 配置 logstash ，见下文。\n4. 启动本项目，在本地 8081 端口访问项目，可以看到有两个按钮，分别是通过 MySQL 的模糊查询和 es 的检索耗时比较。\n\n### 配置 logstash\n使用 logstash 同步  mysql 中的数据。全量同步，增量更新\n这里使用虚拟机中的 centos 。\n前提，CentOS 中安装 ElasticSearch 。 \n第一步，下载 [logstash](https://www.elastic.co/cn/downloads/past-releases#logstash) \n第二步，把数据库连接的驱动 jar 包放到 logstash 的目录中。\n![enter description here](../images/1574645141708.png)\n第三步，在 config 文件夹中新建文件 `mysql.conf`，配置数据库，es 端口等输入输出规则\n```dsconfig\ninput{\n  jdbc{\n    # jdbc 驱动包位置\n    jdbc_driver_library => \"/home/es/logstash-6.2.4/mysql-connector-java-5.1.6.jar\"\n    # 要使用的驱动包类\n    jdbc_driver_class => \"com.mysql.jdbc.Driver\" \n    # mysql 数据库的连接信息\n    jdbc_connection_string => \"jdbc:mysql://localhost:3306/blog\"\n    # mysql 用户\n    jdbc_user => \"root\"\n    # 密码\n    jdbc_password => \"密码\"\n    # 定时任务，多久执行一次查询，默认一分钟，如果想要没有延迟，可以使用 schedule => \"* * * * *\"\n    schedule => \"* * * * *\"\n    # 清空上一次的 sql_last_value 记录\n    clean_run => true\n    # 要执行的语句\n    statement => \"select * from t_blog where update_time > :sql_last_value and update_time < NOW() order by update_time desc\"\n    }\n}\n\noutput {\n  elasticsearch {\n    # es host : port\n    hosts => [\"192.168.42.134:9200\"]\n    # 索引\n    index => \"blog\"\n    # _id\n    document_id => \"%{id}\"\n  }\n}\n\n```\n第四步，以配置文件的方式启动 logstash\n```shell\n[es@localhost bin]$ ./logstash -f ../config/mysql.conf \n```\n第五步，kibana 中查看是否同步成功\n```shell\n\nGET blog/_stats\n// 查看全部数据\nPOST blog/_search\n{\n}\n```\n\n","slug":"2019-7-09-ElasticSearch","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd0a000lyfmy5j61g6y3","content":"<h3 id=\"SpringBoot-集成-ElasticSearch-实现-MySQL-数据同步\"><a href=\"#SpringBoot-集成-ElasticSearch-实现-MySQL-数据同步\" class=\"headerlink\" title=\"SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步\"></a>SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步</h3><p>需要提前安装好 ElasticSearch 。logstash 安装下文有具体说明。<br>新建表 blog 必须有字段 id update_time，可参考项目中 entity 包下字段建表。<br>项目地址 <a href=\"https://github.com/sixkery/blog_index\" target=\"_blank\" rel=\"noopener\">SpringBoot 搭建博客检索系统</a><br>使用步骤</p>\n<ol>\n<li>download 本项目</li>\n<li>修改 yml 文件中的数据库配置，es 配置。</li>\n<li>配置 logstash ，见下文。</li>\n<li>启动本项目，在本地 8081 端口访问项目，可以看到有两个按钮，分别是通过 MySQL 的模糊查询和 es 的检索耗时比较。</li>\n</ol>\n<h3 id=\"配置-logstash\"><a href=\"#配置-logstash\" class=\"headerlink\" title=\"配置 logstash\"></a>配置 logstash</h3><p>使用 logstash 同步  mysql 中的数据。全量同步，增量更新<br>这里使用虚拟机中的 centos 。<br>前提，CentOS 中安装 ElasticSearch 。<br>第一步，下载 <a href=\"https://www.elastic.co/cn/downloads/past-releases#logstash\" target=\"_blank\" rel=\"noopener\">logstash</a><br>第二步，把数据库连接的驱动 jar 包放到 logstash 的目录中。<br><img src=\"../images/1574645141708.png\" alt=\"enter description here\"><br>第三步，在 config 文件夹中新建文件 <code>mysql.conf</code>，配置数据库，es 端口等输入输出规则</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">input&#123;</span></span><br><span class=\"line\">  <span class=\"string\">jdbc&#123;</span></span><br><span class=\"line\">    <span class=\"comment\"># jdbc 驱动包位置</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_driver_library </span>=&gt; <span class=\"string\">\"/home/es/logstash-6.2.4/mysql-connector-java-5.1.6.jar\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 要使用的驱动包类</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_driver_class </span>=&gt; <span class=\"string\">\"com.mysql.jdbc.Driver\"</span> </span><br><span class=\"line\">    <span class=\"comment\"># mysql 数据库的连接信息</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_connection_string </span>=&gt; <span class=\"string\">\"jdbc:mysql://localhost:3306/blog\"</span></span><br><span class=\"line\">    <span class=\"comment\"># mysql 用户</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_user </span>=&gt; <span class=\"string\">\"root\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 密码</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_password </span>=&gt; <span class=\"string\">\"密码\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 定时任务，多久执行一次查询，默认一分钟，如果想要没有延迟，可以使用 schedule =&gt; \"* * * * *\"</span></span><br><span class=\"line\">    <span class=\"string\">schedule </span>=&gt; <span class=\"string\">\"* * * * *\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 清空上一次的 sql_last_value 记录</span></span><br><span class=\"line\">    <span class=\"string\">clean_run </span>=&gt; <span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"string\"> </span>   <span class=\"comment\"># 要执行的语句</span></span><br><span class=\"line\">    <span class=\"string\">statement </span>=&gt; <span class=\"string\">\"select * from t_blog where update_time &gt; :sql_last_value and update_time &lt; NOW() order by update_time desc\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">output </span>&#123;</span><br><span class=\"line\">  <span class=\"string\">elasticsearch </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\"># es host : port</span></span><br><span class=\"line\">    <span class=\"string\">hosts </span>=&gt; [<span class=\"string\">\"192.168.42.134:9200\"</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 索引</span></span><br><span class=\"line\">    <span class=\"string\">index </span>=&gt; <span class=\"string\">\"blog\"</span></span><br><span class=\"line\">    <span class=\"comment\"># _id</span></span><br><span class=\"line\">    <span class=\"string\">document_id </span>=&gt; <span class=\"string\">\"%&#123;id&#125;\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第四步，以配置文件的方式启动 logstash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[es@localhost bin]$ ./logstash -f ../config/mysql.conf</span><br></pre></td></tr></table></figure>\n<p>第五步，kibana 中查看是否同步成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">GET blog/_stats</span><br><span class=\"line\">// 查看全部数据</span><br><span class=\"line\">POST blog/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"SpringBoot-集成-ElasticSearch-实现-MySQL-数据同步\"><a href=\"#SpringBoot-集成-ElasticSearch-实现-MySQL-数据同步\" class=\"headerlink\" title=\"SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步\"></a>SpringBoot 集成 ElasticSearch 实现 MySQL 数据同步</h3><p>需要提前安装好 ElasticSearch 。logstash 安装下文有具体说明。<br>新建表 blog 必须有字段 id update_time，可参考项目中 entity 包下字段建表。<br>项目地址 <a href=\"https://github.com/sixkery/blog_index\" target=\"_blank\" rel=\"noopener\">SpringBoot 搭建博客检索系统</a><br>使用步骤</p>\n<ol>\n<li>download 本项目</li>\n<li>修改 yml 文件中的数据库配置，es 配置。</li>\n<li>配置 logstash ，见下文。</li>\n<li>启动本项目，在本地 8081 端口访问项目，可以看到有两个按钮，分别是通过 MySQL 的模糊查询和 es 的检索耗时比较。</li>\n</ol>\n<h3 id=\"配置-logstash\"><a href=\"#配置-logstash\" class=\"headerlink\" title=\"配置 logstash\"></a>配置 logstash</h3><p>使用 logstash 同步  mysql 中的数据。全量同步，增量更新<br>这里使用虚拟机中的 centos 。<br>前提，CentOS 中安装 ElasticSearch 。<br>第一步，下载 <a href=\"https://www.elastic.co/cn/downloads/past-releases#logstash\" target=\"_blank\" rel=\"noopener\">logstash</a><br>第二步，把数据库连接的驱动 jar 包放到 logstash 的目录中。<br><img src=\"../images/1574645141708.png\" alt=\"enter description here\"><br>第三步，在 config 文件夹中新建文件 <code>mysql.conf</code>，配置数据库，es 端口等输入输出规则</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">input&#123;</span></span><br><span class=\"line\">  <span class=\"string\">jdbc&#123;</span></span><br><span class=\"line\">    <span class=\"comment\"># jdbc 驱动包位置</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_driver_library </span>=&gt; <span class=\"string\">\"/home/es/logstash-6.2.4/mysql-connector-java-5.1.6.jar\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 要使用的驱动包类</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_driver_class </span>=&gt; <span class=\"string\">\"com.mysql.jdbc.Driver\"</span> </span><br><span class=\"line\">    <span class=\"comment\"># mysql 数据库的连接信息</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_connection_string </span>=&gt; <span class=\"string\">\"jdbc:mysql://localhost:3306/blog\"</span></span><br><span class=\"line\">    <span class=\"comment\"># mysql 用户</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_user </span>=&gt; <span class=\"string\">\"root\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 密码</span></span><br><span class=\"line\">    <span class=\"string\">jdbc_password </span>=&gt; <span class=\"string\">\"密码\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 定时任务，多久执行一次查询，默认一分钟，如果想要没有延迟，可以使用 schedule =&gt; \"* * * * *\"</span></span><br><span class=\"line\">    <span class=\"string\">schedule </span>=&gt; <span class=\"string\">\"* * * * *\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 清空上一次的 sql_last_value 记录</span></span><br><span class=\"line\">    <span class=\"string\">clean_run </span>=&gt; <span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"string\"> </span>   <span class=\"comment\"># 要执行的语句</span></span><br><span class=\"line\">    <span class=\"string\">statement </span>=&gt; <span class=\"string\">\"select * from t_blog where update_time &gt; :sql_last_value and update_time &lt; NOW() order by update_time desc\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">output </span>&#123;</span><br><span class=\"line\">  <span class=\"string\">elasticsearch </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\"># es host : port</span></span><br><span class=\"line\">    <span class=\"string\">hosts </span>=&gt; [<span class=\"string\">\"192.168.42.134:9200\"</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 索引</span></span><br><span class=\"line\">    <span class=\"string\">index </span>=&gt; <span class=\"string\">\"blog\"</span></span><br><span class=\"line\">    <span class=\"comment\"># _id</span></span><br><span class=\"line\">    <span class=\"string\">document_id </span>=&gt; <span class=\"string\">\"%&#123;id&#125;\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第四步，以配置文件的方式启动 logstash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[es@localhost bin]$ ./logstash -f ../config/mysql.conf</span><br></pre></td></tr></table></figure>\n<p>第五步，kibana 中查看是否同步成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">GET blog/_stats</span><br><span class=\"line\">// 查看全部数据</span><br><span class=\"line\">POST blog/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"Linux命令","date":"2018-11-01T13:15:06.000Z","description":"Linux","_content":"\n\nLinux 下 Java 程序后台运行\n```shell\n nohup java -jar eureka-0.0.1-SNAPSHOT.jar &\n```\n* nohup：关闭程序，退出账号依然运行\n* &：后台运行\n\n在Windows 下运行 Linux 命令，可以使用 Git 的 bash\n\n```shell\ntail -f \n````\n实时监控日志\n\n\n安装并运行 rabbitMQ\n```shell\ndocker run -d --hostname my-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3.7.3-management\n```\n映射的端口：5672\n管理界面的端口：15672\n浏览器输入 ip:管理界面的端口 访问管理界面，用户名密码都是 guest\n\ndocker ps 查看当前启动的容器 ","source":"_posts/2019-7-8-Linux.md","raw":"---\nlayout: post\ntitle: \"Linux命令\"\ndate: 2018-11-01 21:15:06 \ndescription: \"Linux\"\ntag: Linux\n---\n\n\nLinux 下 Java 程序后台运行\n```shell\n nohup java -jar eureka-0.0.1-SNAPSHOT.jar &\n```\n* nohup：关闭程序，退出账号依然运行\n* &：后台运行\n\n在Windows 下运行 Linux 命令，可以使用 Git 的 bash\n\n```shell\ntail -f \n````\n实时监控日志\n\n\n安装并运行 rabbitMQ\n```shell\ndocker run -d --hostname my-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3.7.3-management\n```\n映射的端口：5672\n管理界面的端口：15672\n浏览器输入 ip:管理界面的端口 访问管理界面，用户名密码都是 guest\n\ndocker ps 查看当前启动的容器 ","slug":"2019-7-8-Linux","published":1,"updated":"2020-05-19T23:46:43.612Z","comments":1,"photos":[],"link":"","_id":"ckcclkd0c000nyfmyh7zi2k2d","content":"<p>Linux 下 Java 程序后台运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup java -jar eureka-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>nohup：关闭程序，退出账号依然运行</li>\n<li>&amp;：后台运行</li>\n</ul>\n<p>在Windows 下运行 Linux 命令，可以使用 Git 的 bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -f </span><br><span class=\"line\">`</span><br></pre></td></tr></table></figure>\n<p>实时监控日志</p>\n<p>安装并运行 rabbitMQ</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --hostname my-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3.7.3-management</span><br></pre></td></tr></table></figure>\n<p>映射的端口：5672<br>管理界面的端口：15672<br>浏览器输入 ip:管理界面的端口 访问管理界面，用户名密码都是 guest</p>\n<p>docker ps 查看当前启动的容器 </p>\n","site":{"data":{}},"excerpt":"","more":"<p>Linux 下 Java 程序后台运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup java -jar eureka-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>nohup：关闭程序，退出账号依然运行</li>\n<li>&amp;：后台运行</li>\n</ul>\n<p>在Windows 下运行 Linux 命令，可以使用 Git 的 bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -f </span><br><span class=\"line\">`</span><br></pre></td></tr></table></figure>\n<p>实时监控日志</p>\n<p>安装并运行 rabbitMQ</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --hostname my-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3.7.3-management</span><br></pre></td></tr></table></figure>\n<p>映射的端口：5672<br>管理界面的端口：15672<br>浏览器输入 ip:管理界面的端口 访问管理界面，用户名密码都是 guest</p>\n<p>docker ps 查看当前启动的容器 </p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-07-07T00:07:39.676Z","updated":"2020-05-21T15:34:28.937Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcclkd0d000qyfmyend68hn6","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"测试文章发布","date":"2020-05-22T14:23:16.000Z","_content":"\n## 这是标题\n\n## 第二段\n\n","source":"_posts/测试文章发布.md","raw":"---\ntitle: 测试文章发布\ndate: 2020-05-22 22:23:16\ntags: 测试\n---\n\n## 这是标题\n\n## 第二段\n\n","slug":"测试文章发布","published":1,"updated":"2020-05-23T04:40:34.137Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcclkd0f000syfmy1k7tefgc","content":"<h2 id=\"这是标题\"><a href=\"#这是标题\" class=\"headerlink\" title=\"这是标题\"></a>这是标题</h2><h2 id=\"第二段\"><a href=\"#第二段\" class=\"headerlink\" title=\"第二段\"></a>第二段</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"这是标题\"><a href=\"#这是标题\" class=\"headerlink\" title=\"这是标题\"></a>这是标题</h2><h2 id=\"第二段\"><a href=\"#第二段\" class=\"headerlink\" title=\"第二段\"></a>第二段</h2>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckcclkczj0000yfmy01m45yya","tag_id":"ckcclkczu0002yfmy4oly435e","_id":"ckcclkd000007yfmy27jg4ls7"},{"post_id":"ckcclkczr0001yfmy21e4c3zc","tag_id":"ckcclkd000006yfmy7co08hgu","_id":"ckcclkd04000cyfmyehwxbxs8"},{"post_id":"ckcclkd03000byfmy3ii6cwd9","tag_id":"ckcclkd03000ayfmy3dushwxl","_id":"ckcclkd06000fyfmy2pby8p11"},{"post_id":"ckcclkczw0003yfmybh333fxg","tag_id":"ckcclkd03000ayfmy3dushwxl","_id":"ckcclkd09000hyfmybbfbgqt3"},{"post_id":"ckcclkd04000dyfmy8gye0d1b","tag_id":"ckcclkd03000ayfmy3dushwxl","_id":"ckcclkd0a000kyfmy7rfzfswk"},{"post_id":"ckcclkczy0004yfmyc5fbd1z0","tag_id":"ckcclkd000006yfmy7co08hgu","_id":"ckcclkd0b000myfmydczc6lmy"},{"post_id":"ckcclkd0a000lyfmy5j61g6y3","tag_id":"ckcclkd03000ayfmy3dushwxl","_id":"ckcclkd0d000oyfmycpsd4l1u"},{"post_id":"ckcclkczz0005yfmy3wqi6zr6","tag_id":"ckcclkd0a000jyfmy6dwg55n4","_id":"ckcclkd0e000ryfmyfeno6d80"},{"post_id":"ckcclkd010008yfmyg4o7exdk","tag_id":"ckcclkd0a000jyfmy6dwg55n4","_id":"ckcclkd0g000uyfmy1801966h"},{"post_id":"ckcclkd020009yfmy0du86495","tag_id":"ckcclkd0g000tyfmyh5ocerfo","_id":"ckcclkd0h000wyfmydwh0hnon"},{"post_id":"ckcclkd07000gyfmyb4005uh1","tag_id":"ckcclkd0h000vyfmyd4rz1i5r","_id":"ckcclkd0i000yyfmygdihdggu"},{"post_id":"ckcclkd09000iyfmy92jw6pkx","tag_id":"ckcclkd0i000xyfmy85gj2w99","_id":"ckcclkd0k0010yfmy8zqf6lep"},{"post_id":"ckcclkd0c000nyfmyh7zi2k2d","tag_id":"ckcclkd0j000zyfmy6wki1a4v","_id":"ckcclkd0l0012yfmy8kp5bzg9"},{"post_id":"ckcclkd0f000syfmy1k7tefgc","tag_id":"ckcclkd0k0011yfmyadjf1919","_id":"ckcclkd0m0013yfmybz0u471q"}],"Tag":[{"name":"Python","_id":"ckcclkczu0002yfmy4oly435e"},{"name":"生活","_id":"ckcclkd000006yfmy7co08hgu"},{"name":"SpringBoot","_id":"ckcclkd03000ayfmy3dushwxl"},{"name":"LeetCode","_id":"ckcclkd0a000jyfmy6dwg55n4"},{"name":"Git","_id":"ckcclkd0g000tyfmyh5ocerfo"},{"name":"Java","_id":"ckcclkd0h000vyfmyd4rz1i5r"},{"name":"缓存","_id":"ckcclkd0i000xyfmy85gj2w99"},{"name":"Linux","_id":"ckcclkd0j000zyfmy6wki1a4v"},{"name":"测试","_id":"ckcclkd0k0011yfmyadjf1919"}]}}